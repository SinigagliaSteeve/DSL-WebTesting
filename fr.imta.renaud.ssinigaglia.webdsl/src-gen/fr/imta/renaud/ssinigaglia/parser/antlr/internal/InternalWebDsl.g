/*
 * generated by Xtext 2.12.0
 */
grammar InternalWebDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package fr.imta.renaud.ssinigaglia.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package fr.imta.renaud.ssinigaglia.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import fr.imta.renaud.ssinigaglia.services.WebDslGrammarAccess;

}

@parser::members {

 	private WebDslGrammarAccess grammarAccess;

    public InternalWebDslParser(TokenStream input, WebDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Program";
   	}

   	@Override
   	protected WebDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleProgram
entryRuleProgram returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProgramRule()); }
	iv_ruleProgram=ruleProgram
	{ $current=$iv_ruleProgram.current; }
	EOF;

// Rule Program
ruleProgram returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getProgramAccess().getProceduresProcedureParserRuleCall_0_0());
				}
				lv_procedures_0_0=ruleProcedure
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProgramRule());
					}
					add(
						$current,
						"procedures",
						lv_procedures_0_0,
						"fr.imta.renaud.ssinigaglia.WebDsl.Procedure");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getProgramAccess().getCoreCoreParserRuleCall_1_0());
				}
				lv_core_1_0=ruleCore
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProgramRule());
					}
					set(
						$current,
						"core",
						lv_core_1_0,
						"fr.imta.renaud.ssinigaglia.WebDsl.Core");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleCore
entryRuleCore returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCoreRule()); }
	iv_ruleCore=ruleCore
	{ $current=$iv_ruleCore.current; }
	EOF;

// Rule Core
ruleCore returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='open_browser'
		{
			newLeafNode(otherlv_0, grammarAccess.getCoreAccess().getOpen_browserKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCoreAccess().getNameBrowserEnumRuleCall_1_0());
				}
				lv_name_1_0=ruleBrowser
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCoreRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"fr.imta.renaud.ssinigaglia.WebDsl.Browser");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getCoreAccess().getActionsActionParserRuleCall_2_0());
				}
				lv_actions_2_0=ruleAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCoreRule());
					}
					add(
						$current,
						"actions",
						lv_actions_2_0,
						"fr.imta.renaud.ssinigaglia.WebDsl.Action");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleProcedure
entryRuleProcedure returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProcedureRule()); }
	iv_ruleProcedure=ruleProcedure
	{ $current=$iv_ruleProcedure.current; }
	EOF;

// Rule Procedure
ruleProcedure returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='PROCEDURE'
		{
			newLeafNode(otherlv_0, grammarAccess.getProcedureAccess().getPROCEDUREKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getProcedureAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getProcedureRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getProcedureAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProcedureAccess().getVarVarParserRuleCall_3_0());
				}
				lv_var_3_0=ruleVar
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProcedureRule());
					}
					set(
						$current,
						"var",
						lv_var_3_0,
						"fr.imta.renaud.ssinigaglia.WebDsl.Var");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='){'
		{
			newLeafNode(otherlv_4, grammarAccess.getProcedureAccess().getRightParenthesisLeftCurlyBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProcedureAccess().getActionsActionParserRuleCall_5_0());
				}
				lv_actions_5_0=ruleAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProcedureRule());
					}
					add(
						$current,
						"actions",
						lv_actions_5_0,
						"fr.imta.renaud.ssinigaglia.WebDsl.Action");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getProcedureAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleAction
entryRuleAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActionRule()); }
	iv_ruleAction=ruleAction
	{ $current=$iv_ruleAction.current; }
	EOF;

// Rule Action
ruleAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getActionAccess().getGoActionGoActionParserRuleCall_0_0());
				}
				lv_goAction_0_0=ruleGoAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getActionRule());
					}
					set(
						$current,
						"goAction",
						lv_goAction_0_0,
						"fr.imta.renaud.ssinigaglia.WebDsl.GoAction");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getActionAccess().getSelectionSelectionParserRuleCall_1_0());
				}
				lv_selection_1_0=ruleSelection
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getActionRule());
					}
					set(
						$current,
						"selection",
						lv_selection_1_0,
						"fr.imta.renaud.ssinigaglia.WebDsl.Selection");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getActionAccess().getCallProcedureCallProcedureParserRuleCall_2_0());
				}
				lv_callProcedure_2_0=ruleCallProcedure
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getActionRule());
					}
					set(
						$current,
						"callProcedure",
						lv_callProcedure_2_0,
						"fr.imta.renaud.ssinigaglia.WebDsl.CallProcedure");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleCallProcedure
entryRuleCallProcedure returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCallProcedureRule()); }
	iv_ruleCallProcedure=ruleCallProcedure
	{ $current=$iv_ruleCallProcedure.current; }
	EOF;

// Rule CallProcedure
ruleCallProcedure returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='PROC:'
		{
			newLeafNode(otherlv_0, grammarAccess.getCallProcedureAccess().getPROCKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCallProcedureRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getCallProcedureAccess().getRefProcedureCrossReference_1_0());
				}
			)
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getCallProcedureAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				lv_arg_3_0=RULE_STRING
				{
					newLeafNode(lv_arg_3_0, grammarAccess.getCallProcedureAccess().getArgSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCallProcedureRule());
					}
					setWithLastConsumed(
						$current,
						"arg",
						lv_arg_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getCallProcedureAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleGoAction
entryRuleGoAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGoActionRule()); }
	iv_ruleGoAction=ruleGoAction
	{ $current=$iv_ruleGoAction.current; }
	EOF;

// Rule GoAction
ruleGoAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='go'
		{
			newLeafNode(otherlv_0, grammarAccess.getGoActionAccess().getGoKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_STRING
				{
					newLeafNode(lv_name_1_0, grammarAccess.getGoActionAccess().getNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGoActionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleSelection
entryRuleSelection returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSelectionRule()); }
	iv_ruleSelection=ruleSelection
	{ $current=$iv_ruleSelection.current; }
	EOF;

// Rule Selection
ruleSelection returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSelectionAccess().getLinkButtonSelectionLinkButtonSelectionParserRuleCall_0_0());
				}
				lv_linkButtonSelection_0_0=ruleLinkButtonSelection
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSelectionRule());
					}
					set(
						$current,
						"linkButtonSelection",
						lv_linkButtonSelection_0_0,
						"fr.imta.renaud.ssinigaglia.WebDsl.LinkButtonSelection");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getSelectionAccess().getGeneralSelectionGeneralSelectionParserRuleCall_1_0());
				}
				lv_generalSelection_1_0=ruleGeneralSelection
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSelectionRule());
					}
					set(
						$current,
						"generalSelection",
						lv_generalSelection_1_0,
						"fr.imta.renaud.ssinigaglia.WebDsl.GeneralSelection");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getSelectionAccess().getCheckboxSelectionCheckboxSelectionParserRuleCall_2_0());
				}
				lv_checkboxSelection_2_0=ruleCheckboxSelection
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSelectionRule());
					}
					set(
						$current,
						"checkboxSelection",
						lv_checkboxSelection_2_0,
						"fr.imta.renaud.ssinigaglia.WebDsl.CheckboxSelection");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getSelectionAccess().getComboboxSelectionComboboxSelectionParserRuleCall_3_0());
				}
				lv_comboboxSelection_3_0=ruleComboboxSelection
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSelectionRule());
					}
					set(
						$current,
						"comboboxSelection",
						lv_comboboxSelection_3_0,
						"fr.imta.renaud.ssinigaglia.WebDsl.ComboboxSelection");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getSelectionAccess().getPageSelectionPageSelectionParserRuleCall_4_0());
				}
				lv_pageSelection_4_0=rulePageSelection
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSelectionRule());
					}
					set(
						$current,
						"pageSelection",
						lv_pageSelection_4_0,
						"fr.imta.renaud.ssinigaglia.WebDsl.PageSelection");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleLinkButtonSelection
entryRuleLinkButtonSelection returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLinkButtonSelectionRule()); }
	iv_ruleLinkButtonSelection=ruleLinkButtonSelection
	{ $current=$iv_ruleLinkButtonSelection.current; }
	EOF;

// Rule LinkButtonSelection
ruleLinkButtonSelection returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='LINK'
			{
				newLeafNode(otherlv_0, grammarAccess.getLinkButtonSelectionAccess().getLINKKeyword_0_0());
			}
			    |
			otherlv_1='BUTTON'
			{
				newLeafNode(otherlv_1, grammarAccess.getLinkButtonSelectionAccess().getBUTTONKeyword_0_1());
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getLinkButtonSelectionAccess().getTypeSelectionTypeSelectionParserRuleCall_1_0());
				}
				lv_typeSelection_2_0=ruleTypeSelection
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLinkButtonSelectionRule());
					}
					set(
						$current,
						"typeSelection",
						lv_typeSelection_2_0,
						"fr.imta.renaud.ssinigaglia.WebDsl.TypeSelection");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getLinkButtonSelectionAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getLinkButtonSelectionAccess().getGeneralActionsGeneralActionParserRuleCall_3_0_0());
					}
					lv_generalActions_4_0=ruleGeneralAction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLinkButtonSelectionRule());
						}
						add(
							$current,
							"generalActions",
							lv_generalActions_4_0,
							"fr.imta.renaud.ssinigaglia.WebDsl.GeneralAction");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			otherlv_5='click'
			{
				newLeafNode(otherlv_5, grammarAccess.getLinkButtonSelectionAccess().getClickKeyword_3_1());
			}
		)*
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getLinkButtonSelectionAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleGeneralSelection
entryRuleGeneralSelection returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGeneralSelectionRule()); }
	iv_ruleGeneralSelection=ruleGeneralSelection
	{ $current=$iv_ruleGeneralSelection.current; }
	EOF;

// Rule GeneralSelection
ruleGeneralSelection returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='SEARCH_FIELD'
			{
				newLeafNode(otherlv_0, grammarAccess.getGeneralSelectionAccess().getSEARCH_FIELDKeyword_0_0());
			}
			    |
			otherlv_1='DIV'
			{
				newLeafNode(otherlv_1, grammarAccess.getGeneralSelectionAccess().getDIVKeyword_0_1());
			}
			    |
			otherlv_2='A'
			{
				newLeafNode(otherlv_2, grammarAccess.getGeneralSelectionAccess().getAKeyword_0_2());
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getGeneralSelectionAccess().getTypeSelectionTypeSelectionParserRuleCall_1_0());
				}
				lv_typeSelection_3_0=ruleTypeSelection
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGeneralSelectionRule());
					}
					set(
						$current,
						"typeSelection",
						lv_typeSelection_3_0,
						"fr.imta.renaud.ssinigaglia.WebDsl.TypeSelection");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getGeneralSelectionAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGeneralSelectionAccess().getGeneralActionsGeneralActionParserRuleCall_3_0());
				}
				lv_generalActions_5_0=ruleGeneralAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGeneralSelectionRule());
					}
					add(
						$current,
						"generalActions",
						lv_generalActions_5_0,
						"fr.imta.renaud.ssinigaglia.WebDsl.GeneralAction");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getGeneralSelectionAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleCheckboxSelection
entryRuleCheckboxSelection returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCheckboxSelectionRule()); }
	iv_ruleCheckboxSelection=ruleCheckboxSelection
	{ $current=$iv_ruleCheckboxSelection.current; }
	EOF;

// Rule CheckboxSelection
ruleCheckboxSelection returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='CHECKBOX'
		{
			newLeafNode(otherlv_0, grammarAccess.getCheckboxSelectionAccess().getCHECKBOXKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCheckboxSelectionAccess().getTypeSelectionTypeSelectionParserRuleCall_1_0());
				}
				lv_typeSelection_1_0=ruleTypeSelection
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCheckboxSelectionRule());
					}
					set(
						$current,
						"typeSelection",
						lv_typeSelection_1_0,
						"fr.imta.renaud.ssinigaglia.WebDsl.TypeSelection");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getCheckboxSelectionAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getCheckboxSelectionAccess().getGeneralActionsGeneralActionParserRuleCall_3_0_0());
					}
					lv_generalActions_3_0=ruleGeneralAction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCheckboxSelectionRule());
						}
						add(
							$current,
							"generalActions",
							lv_generalActions_3_0,
							"fr.imta.renaud.ssinigaglia.WebDsl.GeneralAction");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			otherlv_4='check'
			{
				newLeafNode(otherlv_4, grammarAccess.getCheckboxSelectionAccess().getCheckKeyword_3_1());
			}
			    |
			otherlv_5='uncheck'
			{
				newLeafNode(otherlv_5, grammarAccess.getCheckboxSelectionAccess().getUncheckKeyword_3_2());
			}
		)*
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getCheckboxSelectionAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleComboboxSelection
entryRuleComboboxSelection returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComboboxSelectionRule()); }
	iv_ruleComboboxSelection=ruleComboboxSelection
	{ $current=$iv_ruleComboboxSelection.current; }
	EOF;

// Rule ComboboxSelection
ruleComboboxSelection returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='COMBO_BOX'
		{
			newLeafNode(otherlv_0, grammarAccess.getComboboxSelectionAccess().getCOMBO_BOXKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getComboboxSelectionAccess().getTypeSelectionTypeSelectionParserRuleCall_1_0());
				}
				lv_typeSelection_1_0=ruleTypeSelection
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComboboxSelectionRule());
					}
					set(
						$current,
						"typeSelection",
						lv_typeSelection_1_0,
						"fr.imta.renaud.ssinigaglia.WebDsl.TypeSelection");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getComboboxSelectionAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getComboboxSelectionAccess().getGeneralActionsGeneralActionParserRuleCall_3_0_0());
					}
					lv_generalActions_3_0=ruleGeneralAction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getComboboxSelectionRule());
						}
						add(
							$current,
							"generalActions",
							lv_generalActions_3_0,
							"fr.imta.renaud.ssinigaglia.WebDsl.GeneralAction");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				otherlv_4='select'
				{
					newLeafNode(otherlv_4, grammarAccess.getComboboxSelectionAccess().getSelectKeyword_3_1_0());
				}
				this_STRING_5=RULE_STRING
				{
					newLeafNode(this_STRING_5, grammarAccess.getComboboxSelectionAccess().getSTRINGTerminalRuleCall_3_1_1());
				}
			)
		)*
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getComboboxSelectionAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRulePageSelection
entryRulePageSelection returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPageSelectionRule()); }
	iv_rulePageSelection=rulePageSelection
	{ $current=$iv_rulePageSelection.current; }
	EOF;

// Rule PageSelection
rulePageSelection returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='PAGE'
		{
			newLeafNode(otherlv_0, grammarAccess.getPageSelectionAccess().getPAGEKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getPageSelectionAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getPageSelectionAccess().getStoreActionStoreActionParserRuleCall_2_0_0());
					}
					lv_storeAction_2_0=ruleStoreAction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPageSelectionRule());
						}
						set(
							$current,
							"storeAction",
							lv_storeAction_2_0,
							"fr.imta.renaud.ssinigaglia.WebDsl.StoreAction");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getPageSelectionAccess().getAssertionAssertParserRuleCall_2_1_0());
					}
					lv_assertion_3_0=ruleAssert
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPageSelectionRule());
						}
						set(
							$current,
							"assertion",
							lv_assertion_3_0,
							"fr.imta.renaud.ssinigaglia.WebDsl.Assert");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getPageSelectionAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleGeneralAction
entryRuleGeneralAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGeneralActionRule()); }
	iv_ruleGeneralAction=ruleGeneralAction
	{ $current=$iv_ruleGeneralAction.current; }
	EOF;

// Rule GeneralAction
ruleGeneralAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getGeneralActionAccess().getSetActionSetActionParserRuleCall_0_0());
				}
				lv_setAction_0_0=ruleSetAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGeneralActionRule());
					}
					set(
						$current,
						"setAction",
						lv_setAction_0_0,
						"fr.imta.renaud.ssinigaglia.WebDsl.SetAction");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getGeneralActionAccess().getStoreActionStoreActionParserRuleCall_1_0());
				}
				lv_storeAction_1_0=ruleStoreAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGeneralActionRule());
					}
					set(
						$current,
						"storeAction",
						lv_storeAction_1_0,
						"fr.imta.renaud.ssinigaglia.WebDsl.StoreAction");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getGeneralActionAccess().getSelectionSelectionParserRuleCall_2_0());
				}
				lv_selection_2_0=ruleSelection
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGeneralActionRule());
					}
					set(
						$current,
						"selection",
						lv_selection_2_0,
						"fr.imta.renaud.ssinigaglia.WebDsl.Selection");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleStoreAction
entryRuleStoreAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStoreActionRule()); }
	iv_ruleStoreAction=ruleStoreAction
	{ $current=$iv_ruleStoreAction.current; }
	EOF;

// Rule StoreAction
ruleStoreAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='store'
		{
			newLeafNode(otherlv_0, grammarAccess.getStoreActionAccess().getStoreKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getStoreActionAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getStoreActionAccess().getValAttributeEnumRuleCall_2_0_0());
					}
					lv_val_2_0=ruleAttribute
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStoreActionRule());
						}
						set(
							$current,
							"val",
							lv_val_2_0,
							"fr.imta.renaud.ssinigaglia.WebDsl.Attribute");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getStoreActionAccess().getCountCountActionParserRuleCall_2_1_0());
					}
					lv_count_3_0=ruleCountAction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStoreActionRule());
						}
						set(
							$current,
							"count",
							lv_count_3_0,
							"fr.imta.renaud.ssinigaglia.WebDsl.CountAction");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getStoreActionAccess().getRightParenthesisKeyword_3());
		}
		otherlv_5='in'
		{
			newLeafNode(otherlv_5, grammarAccess.getStoreActionAccess().getInKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStoreActionAccess().getVarVarParserRuleCall_5_0());
				}
				lv_var_6_0=ruleVar
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStoreActionRule());
					}
					set(
						$current,
						"var",
						lv_var_6_0,
						"fr.imta.renaud.ssinigaglia.WebDsl.Var");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleCountAction
entryRuleCountAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCountActionRule()); }
	iv_ruleCountAction=ruleCountAction
	{ $current=$iv_ruleCountAction.current; }
	EOF;

// Rule CountAction
ruleCountAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='count'
		{
			newLeafNode(otherlv_0, grammarAccess.getCountActionAccess().getCountKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCountActionAccess().getHtmlElementHtmlElementEnumRuleCall_1_0());
				}
				lv_htmlElement_1_0=ruleHtmlElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCountActionRule());
					}
					set(
						$current,
						"htmlElement",
						lv_htmlElement_1_0,
						"fr.imta.renaud.ssinigaglia.WebDsl.HtmlElement");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getCountActionAccess().getTypeSelectionTypeSelectionParserRuleCall_2_0());
				}
				lv_typeSelection_2_0=ruleTypeSelection
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCountActionRule());
					}
					set(
						$current,
						"typeSelection",
						lv_typeSelection_2_0,
						"fr.imta.renaud.ssinigaglia.WebDsl.TypeSelection");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleVar
entryRuleVar returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVarRule()); }
	iv_ruleVar=ruleVar
	{ $current=$iv_ruleVar.current; }
	EOF;

// Rule Var
ruleVar returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getVarAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getVarRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRuleSetAction
entryRuleSetAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSetActionRule()); }
	iv_ruleSetAction=ruleSetAction
	{ $current=$iv_ruleSetAction.current; }
	EOF;

// Rule SetAction
ruleSetAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='set'
		{
			newLeafNode(otherlv_0, grammarAccess.getSetActionAccess().getSetKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSetActionAccess().getAttributeAttributeEnumRuleCall_1_0());
				}
				lv_attribute_1_0=ruleAttribute
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSetActionRule());
					}
					set(
						$current,
						"attribute",
						lv_attribute_1_0,
						"fr.imta.renaud.ssinigaglia.WebDsl.Attribute");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getSetActionAccess().getColonKeyword_2());
		}
		(
			(
				lv_value_3_0=RULE_STRING
				{
					newLeafNode(lv_value_3_0, grammarAccess.getSetActionAccess().getValueSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSetActionRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleTypeSelection
entryRuleTypeSelection returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeSelectionRule()); }
	iv_ruleTypeSelection=ruleTypeSelection
	{ $current=$iv_ruleTypeSelection.current; }
	EOF;

// Rule TypeSelection
ruleTypeSelection returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getTypeSelectionAccess().getAttributeAttributeEnumRuleCall_0_0_0());
					}
					lv_attribute_0_0=ruleAttribute
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTypeSelectionRule());
						}
						set(
							$current,
							"attribute",
							lv_attribute_0_0,
							"fr.imta.renaud.ssinigaglia.WebDsl.Attribute");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_1=':'
			{
				newLeafNode(otherlv_1, grammarAccess.getTypeSelectionAccess().getColonKeyword_0_1());
			}
			(
				(
					(
						lv_value_2_0=RULE_STRING
						{
							newLeafNode(lv_value_2_0, grammarAccess.getTypeSelectionAccess().getValueSTRINGTerminalRuleCall_0_2_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getTypeSelectionRule());
							}
							setWithLastConsumed(
								$current,
								"value",
								lv_value_2_0,
								"org.eclipse.xtext.common.Terminals.STRING");
						}
					)
				)
				    |
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getTypeSelectionRule());
							}
						}
						otherlv_3=RULE_ID
						{
							newLeafNode(otherlv_3, grammarAccess.getTypeSelectionAccess().getVarVarCrossReference_0_2_1_0());
						}
					)
				)
			)
		)
		    |
		otherlv_4='PARENT'
		{
			newLeafNode(otherlv_4, grammarAccess.getTypeSelectionAccess().getPARENTKeyword_1());
		}
		    |
		otherlv_5='FIRST'
		{
			newLeafNode(otherlv_5, grammarAccess.getTypeSelectionAccess().getFIRSTKeyword_2());
		}
		    |
		otherlv_6='LAST'
		{
			newLeafNode(otherlv_6, grammarAccess.getTypeSelectionAccess().getLASTKeyword_3());
		}
		    |
		otherlv_7='ALL'
		{
			newLeafNode(otherlv_7, grammarAccess.getTypeSelectionAccess().getALLKeyword_4());
		}
	)
;

// Entry rule entryRuleAssert
entryRuleAssert returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAssertRule()); }
	iv_ruleAssert=ruleAssert
	{ $current=$iv_ruleAssert.current; }
	EOF;

// Rule Assert
ruleAssert returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='verify'
		{
			newLeafNode(otherlv_0, grammarAccess.getAssertAccess().getVerifyKeyword_0());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getAssertAccess().getAssertContainAssertContainsParserRuleCall_1_0_0());
					}
					lv_assertContain_1_0=ruleAssertContains
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAssertRule());
						}
						set(
							$current,
							"assertContain",
							lv_assertContain_1_0,
							"fr.imta.renaud.ssinigaglia.WebDsl.AssertContains");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getAssertAccess().getAssertEqualsAssertEqualsParserRuleCall_1_1_0());
					}
					lv_assertEquals_2_0=ruleAssertEquals
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAssertRule());
						}
						set(
							$current,
							"assertEquals",
							lv_assertEquals_2_0,
							"fr.imta.renaud.ssinigaglia.WebDsl.AssertEquals");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleAssertContains
entryRuleAssertContains returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAssertContainsRule()); }
	iv_ruleAssertContains=ruleAssertContains
	{ $current=$iv_ruleAssertContains.current; }
	EOF;

// Rule AssertContains
ruleAssertContains returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='contains'
		{
			newLeafNode(otherlv_0, grammarAccess.getAssertContainsAccess().getContainsKeyword_0());
		}
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getAssertContainsAccess().getHtmlElementHtmlElementEnumRuleCall_1_0_0_0());
						}
						lv_htmlElement_1_0=ruleHtmlElement
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAssertContainsRule());
							}
							set(
								$current,
								"htmlElement",
								lv_htmlElement_1_0,
								"fr.imta.renaud.ssinigaglia.WebDsl.HtmlElement");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getAssertContainsAccess().getAttributeAttributeEnumRuleCall_1_0_1_0());
						}
						lv_attribute_2_0=ruleAttribute
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAssertContainsRule());
							}
							set(
								$current,
								"attribute",
								lv_attribute_2_0,
								"fr.imta.renaud.ssinigaglia.WebDsl.Attribute");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			otherlv_3='TEXT'
			{
				newLeafNode(otherlv_3, grammarAccess.getAssertContainsAccess().getTEXTKeyword_1_1());
			}
		)
		otherlv_4=':'
		{
			newLeafNode(otherlv_4, grammarAccess.getAssertContainsAccess().getColonKeyword_2());
		}
		this_STRING_5=RULE_STRING
		{
			newLeafNode(this_STRING_5, grammarAccess.getAssertContainsAccess().getSTRINGTerminalRuleCall_3());
		}
	)
;

// Entry rule entryRuleAssertEquals
entryRuleAssertEquals returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAssertEqualsRule()); }
	iv_ruleAssertEquals=ruleAssertEquals
	{ $current=$iv_ruleAssertEquals.current; }
	EOF;

// Rule AssertEquals
ruleAssertEquals returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getAssertEqualsAccess().getC1ComparableParserRuleCall_0_0());
				}
				lv_c1_0_0=ruleComparable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAssertEqualsRule());
					}
					set(
						$current,
						"c1",
						lv_c1_0_0,
						"fr.imta.renaud.ssinigaglia.WebDsl.Comparable");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='equals'
		{
			newLeafNode(otherlv_1, grammarAccess.getAssertEqualsAccess().getEqualsKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAssertEqualsAccess().getC2ComparableParserRuleCall_2_0());
				}
				lv_c2_2_0=ruleComparable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAssertEqualsRule());
					}
					set(
						$current,
						"c2",
						lv_c2_2_0,
						"fr.imta.renaud.ssinigaglia.WebDsl.Comparable");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleComparable
entryRuleComparable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComparableRule()); }
	iv_ruleComparable=ruleComparable
	{ $current=$iv_ruleComparable.current; }
	EOF;

// Rule Comparable
ruleComparable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='VAR:'
			{
				newLeafNode(otherlv_0, grammarAccess.getComparableAccess().getVARKeyword_0_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getComparableAccess().getVarVarParserRuleCall_0_1_0());
					}
					lv_var_1_0=ruleVar
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getComparableRule());
						}
						set(
							$current,
							"var",
							lv_var_1_0,
							"fr.imta.renaud.ssinigaglia.WebDsl.Var");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			otherlv_2='('
			{
				newLeafNode(otherlv_2, grammarAccess.getComparableAccess().getLeftParenthesisKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getComparableAccess().getHtmlElementHtmlElementEnumRuleCall_1_1_0());
					}
					lv_htmlElement_3_0=ruleHtmlElement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getComparableRule());
						}
						set(
							$current,
							"htmlElement",
							lv_htmlElement_3_0,
							"fr.imta.renaud.ssinigaglia.WebDsl.HtmlElement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getComparableAccess().getAttributeAttributeEnumRuleCall_1_2_0());
					}
					lv_attribute_4_0=ruleAttribute
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getComparableRule());
						}
						set(
							$current,
							"attribute",
							lv_attribute_4_0,
							"fr.imta.renaud.ssinigaglia.WebDsl.Attribute");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_5=')'
			{
				newLeafNode(otherlv_5, grammarAccess.getComparableAccess().getRightParenthesisKeyword_1_3());
			}
		)
		    |
		this_STRING_6=RULE_STRING
		{
			newLeafNode(this_STRING_6, grammarAccess.getComparableAccess().getSTRINGTerminalRuleCall_2());
		}
	)
;

// Rule Browser
ruleBrowser returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='chrome'
			{
				$current = grammarAccess.getBrowserAccess().getCHROMEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getBrowserAccess().getCHROMEEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='firefox'
			{
				$current = grammarAccess.getBrowserAccess().getFIREFOXEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getBrowserAccess().getFIREFOXEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='safari'
			{
				$current = grammarAccess.getBrowserAccess().getSAFARIEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getBrowserAccess().getSAFARIEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='edge'
			{
				$current = grammarAccess.getBrowserAccess().getEDGEEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getBrowserAccess().getEDGEEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='ie'
			{
				$current = grammarAccess.getBrowserAccess().getIEEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getBrowserAccess().getIEEnumLiteralDeclaration_4());
			}
		)
	)
;

// Rule HtmlElement
ruleHtmlElement returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='LINK'
			{
				$current = grammarAccess.getHtmlElementAccess().getLINKEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getHtmlElementAccess().getLINKEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='BUTTON'
			{
				$current = grammarAccess.getHtmlElementAccess().getBUTTONEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getHtmlElementAccess().getBUTTONEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='CHECKBOX'
			{
				$current = grammarAccess.getHtmlElementAccess().getCHECKBOXEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getHtmlElementAccess().getCHECKBOXEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='COMBO_BOX'
			{
				$current = grammarAccess.getHtmlElementAccess().getCOMBOBOXEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getHtmlElementAccess().getCOMBOBOXEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='DIV'
			{
				$current = grammarAccess.getHtmlElementAccess().getDIVEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getHtmlElementAccess().getDIVEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='IMAGE'
			{
				$current = grammarAccess.getHtmlElementAccess().getIMAGEEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getHtmlElementAccess().getIMAGEEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='A'
			{
				$current = grammarAccess.getHtmlElementAccess().getAEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getHtmlElementAccess().getAEnumLiteralDeclaration_6());
			}
		)
	)
;

// Rule Attribute
ruleAttribute returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='LABEL'
			{
				$current = grammarAccess.getAttributeAccess().getLABELEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getAttributeAccess().getLABELEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='ID'
			{
				$current = grammarAccess.getAttributeAccess().getIDEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getAttributeAccess().getIDEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='CLASS'
			{
				$current = grammarAccess.getAttributeAccess().getCLASSEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getAttributeAccess().getCLASSEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='ALT'
			{
				$current = grammarAccess.getAttributeAccess().getALTEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getAttributeAccess().getALTEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='VALUE'
			{
				$current = grammarAccess.getAttributeAccess().getVALUEEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getAttributeAccess().getVALUEEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='HREF'
			{
				$current = grammarAccess.getAttributeAccess().getHREFEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getAttributeAccess().getHREFEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='TITLE'
			{
				$current = grammarAccess.getAttributeAccess().getTITLEEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getAttributeAccess().getTITLEEnumLiteralDeclaration_6());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
