/**
 * generated by Xtext 2.12.0
 */
package fr.imta.renaud.ssinigaglia.webDsl.impl;

import fr.imta.renaud.ssinigaglia.webDsl.AssertContains;
import fr.imta.renaud.ssinigaglia.webDsl.Attribute;
import fr.imta.renaud.ssinigaglia.webDsl.HtmlElement;
import fr.imta.renaud.ssinigaglia.webDsl.WebDslPackage;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Assert Contains</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link fr.imta.renaud.ssinigaglia.webDsl.impl.AssertContainsImpl#getHtmlElement <em>Html Element</em>}</li>
 *   <li>{@link fr.imta.renaud.ssinigaglia.webDsl.impl.AssertContainsImpl#getAttribute <em>Attribute</em>}</li>
 * </ul>
 *
 * @generated
 */
public class AssertContainsImpl extends MinimalEObjectImpl.Container implements AssertContains
{
  /**
   * The default value of the '{@link #getHtmlElement() <em>Html Element</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getHtmlElement()
   * @generated
   * @ordered
   */
  protected static final HtmlElement HTML_ELEMENT_EDEFAULT = HtmlElement.LINK;

  /**
   * The cached value of the '{@link #getHtmlElement() <em>Html Element</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getHtmlElement()
   * @generated
   * @ordered
   */
  protected HtmlElement htmlElement = HTML_ELEMENT_EDEFAULT;

  /**
   * The default value of the '{@link #getAttribute() <em>Attribute</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAttribute()
   * @generated
   * @ordered
   */
  protected static final Attribute ATTRIBUTE_EDEFAULT = Attribute.LABEL;

  /**
   * The cached value of the '{@link #getAttribute() <em>Attribute</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAttribute()
   * @generated
   * @ordered
   */
  protected Attribute attribute = ATTRIBUTE_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected AssertContainsImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return WebDslPackage.Literals.ASSERT_CONTAINS;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public HtmlElement getHtmlElement()
  {
    return htmlElement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setHtmlElement(HtmlElement newHtmlElement)
  {
    HtmlElement oldHtmlElement = htmlElement;
    htmlElement = newHtmlElement == null ? HTML_ELEMENT_EDEFAULT : newHtmlElement;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, WebDslPackage.ASSERT_CONTAINS__HTML_ELEMENT, oldHtmlElement, htmlElement));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Attribute getAttribute()
  {
    return attribute;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setAttribute(Attribute newAttribute)
  {
    Attribute oldAttribute = attribute;
    attribute = newAttribute == null ? ATTRIBUTE_EDEFAULT : newAttribute;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, WebDslPackage.ASSERT_CONTAINS__ATTRIBUTE, oldAttribute, attribute));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case WebDslPackage.ASSERT_CONTAINS__HTML_ELEMENT:
        return getHtmlElement();
      case WebDslPackage.ASSERT_CONTAINS__ATTRIBUTE:
        return getAttribute();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case WebDslPackage.ASSERT_CONTAINS__HTML_ELEMENT:
        setHtmlElement((HtmlElement)newValue);
        return;
      case WebDslPackage.ASSERT_CONTAINS__ATTRIBUTE:
        setAttribute((Attribute)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case WebDslPackage.ASSERT_CONTAINS__HTML_ELEMENT:
        setHtmlElement(HTML_ELEMENT_EDEFAULT);
        return;
      case WebDslPackage.ASSERT_CONTAINS__ATTRIBUTE:
        setAttribute(ATTRIBUTE_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case WebDslPackage.ASSERT_CONTAINS__HTML_ELEMENT:
        return htmlElement != HTML_ELEMENT_EDEFAULT;
      case WebDslPackage.ASSERT_CONTAINS__ATTRIBUTE:
        return attribute != ATTRIBUTE_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (htmlElement: ");
    result.append(htmlElement);
    result.append(", attribute: ");
    result.append(attribute);
    result.append(')');
    return result.toString();
  }

} //AssertContainsImpl
