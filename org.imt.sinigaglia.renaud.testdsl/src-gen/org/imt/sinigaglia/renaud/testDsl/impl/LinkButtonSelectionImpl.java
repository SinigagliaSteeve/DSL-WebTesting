/**
 * generated by Xtext 2.12.0
 */
package org.imt.sinigaglia.renaud.testDsl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.imt.sinigaglia.renaud.testDsl.GeneralAction;
import org.imt.sinigaglia.renaud.testDsl.LinkButtonSelection;
import org.imt.sinigaglia.renaud.testDsl.TestDslPackage;
import org.imt.sinigaglia.renaud.testDsl.TypeSelection;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Link Button Selection</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.imt.sinigaglia.renaud.testDsl.impl.LinkButtonSelectionImpl#getTypeSelection <em>Type Selection</em>}</li>
 *   <li>{@link org.imt.sinigaglia.renaud.testDsl.impl.LinkButtonSelectionImpl#getGeneralActions <em>General Actions</em>}</li>
 * </ul>
 *
 * @generated
 */
public class LinkButtonSelectionImpl extends MinimalEObjectImpl.Container implements LinkButtonSelection
{
  /**
   * The cached value of the '{@link #getTypeSelection() <em>Type Selection</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTypeSelection()
   * @generated
   * @ordered
   */
  protected TypeSelection typeSelection;

  /**
   * The cached value of the '{@link #getGeneralActions() <em>General Actions</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGeneralActions()
   * @generated
   * @ordered
   */
  protected GeneralAction generalActions;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected LinkButtonSelectionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return TestDslPackage.Literals.LINK_BUTTON_SELECTION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TypeSelection getTypeSelection()
  {
    return typeSelection;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetTypeSelection(TypeSelection newTypeSelection, NotificationChain msgs)
  {
    TypeSelection oldTypeSelection = typeSelection;
    typeSelection = newTypeSelection;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, TestDslPackage.LINK_BUTTON_SELECTION__TYPE_SELECTION, oldTypeSelection, newTypeSelection);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setTypeSelection(TypeSelection newTypeSelection)
  {
    if (newTypeSelection != typeSelection)
    {
      NotificationChain msgs = null;
      if (typeSelection != null)
        msgs = ((InternalEObject)typeSelection).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - TestDslPackage.LINK_BUTTON_SELECTION__TYPE_SELECTION, null, msgs);
      if (newTypeSelection != null)
        msgs = ((InternalEObject)newTypeSelection).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - TestDslPackage.LINK_BUTTON_SELECTION__TYPE_SELECTION, null, msgs);
      msgs = basicSetTypeSelection(newTypeSelection, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TestDslPackage.LINK_BUTTON_SELECTION__TYPE_SELECTION, newTypeSelection, newTypeSelection));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public GeneralAction getGeneralActions()
  {
    return generalActions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetGeneralActions(GeneralAction newGeneralActions, NotificationChain msgs)
  {
    GeneralAction oldGeneralActions = generalActions;
    generalActions = newGeneralActions;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, TestDslPackage.LINK_BUTTON_SELECTION__GENERAL_ACTIONS, oldGeneralActions, newGeneralActions);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setGeneralActions(GeneralAction newGeneralActions)
  {
    if (newGeneralActions != generalActions)
    {
      NotificationChain msgs = null;
      if (generalActions != null)
        msgs = ((InternalEObject)generalActions).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - TestDslPackage.LINK_BUTTON_SELECTION__GENERAL_ACTIONS, null, msgs);
      if (newGeneralActions != null)
        msgs = ((InternalEObject)newGeneralActions).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - TestDslPackage.LINK_BUTTON_SELECTION__GENERAL_ACTIONS, null, msgs);
      msgs = basicSetGeneralActions(newGeneralActions, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TestDslPackage.LINK_BUTTON_SELECTION__GENERAL_ACTIONS, newGeneralActions, newGeneralActions));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case TestDslPackage.LINK_BUTTON_SELECTION__TYPE_SELECTION:
        return basicSetTypeSelection(null, msgs);
      case TestDslPackage.LINK_BUTTON_SELECTION__GENERAL_ACTIONS:
        return basicSetGeneralActions(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case TestDslPackage.LINK_BUTTON_SELECTION__TYPE_SELECTION:
        return getTypeSelection();
      case TestDslPackage.LINK_BUTTON_SELECTION__GENERAL_ACTIONS:
        return getGeneralActions();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case TestDslPackage.LINK_BUTTON_SELECTION__TYPE_SELECTION:
        setTypeSelection((TypeSelection)newValue);
        return;
      case TestDslPackage.LINK_BUTTON_SELECTION__GENERAL_ACTIONS:
        setGeneralActions((GeneralAction)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case TestDslPackage.LINK_BUTTON_SELECTION__TYPE_SELECTION:
        setTypeSelection((TypeSelection)null);
        return;
      case TestDslPackage.LINK_BUTTON_SELECTION__GENERAL_ACTIONS:
        setGeneralActions((GeneralAction)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case TestDslPackage.LINK_BUTTON_SELECTION__TYPE_SELECTION:
        return typeSelection != null;
      case TestDslPackage.LINK_BUTTON_SELECTION__GENERAL_ACTIONS:
        return generalActions != null;
    }
    return super.eIsSet(featureID);
  }

} //LinkButtonSelectionImpl
