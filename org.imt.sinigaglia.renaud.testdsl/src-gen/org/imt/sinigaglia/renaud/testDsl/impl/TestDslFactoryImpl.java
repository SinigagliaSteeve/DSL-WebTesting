/**
 * generated by Xtext 2.12.0
 */
package org.imt.sinigaglia.renaud.testDsl.impl;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

import org.imt.sinigaglia.renaud.testDsl.*;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class TestDslFactoryImpl extends EFactoryImpl implements TestDslFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static TestDslFactory init()
  {
    try
    {
      TestDslFactory theTestDslFactory = (TestDslFactory)EPackage.Registry.INSTANCE.getEFactory(TestDslPackage.eNS_URI);
      if (theTestDslFactory != null)
      {
        return theTestDslFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new TestDslFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TestDslFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case TestDslPackage.PROGRAM: return createProgram();
      case TestDslPackage.CORE: return createCore();
      case TestDslPackage.ACTION: return createAction();
      case TestDslPackage.GO_ACTION: return createGoAction();
      case TestDslPackage.SELECTION: return createSelection();
      case TestDslPackage.LINK_BUTTON_SELECTION: return createLinkButtonSelection();
      case TestDslPackage.SEARCHFIELD_SELECTION: return createSearchfieldSelection();
      case TestDslPackage.CHECKBOX_SELECTION: return createCheckboxSelection();
      case TestDslPackage.COMBOBOX_SELECTION: return createComboboxSelection();
      case TestDslPackage.DIV_SELECTION: return createDivSelection();
      case TestDslPackage.GENERAL_ACTION: return createGeneralAction();
      case TestDslPackage.STORE_ACTION: return createStoreAction();
      case TestDslPackage.VAR: return createVar();
      case TestDslPackage.SET_ACTION: return createSetAction();
      case TestDslPackage.ELEMENT: return createElement();
      case TestDslPackage.TYPE_SELECTION: return createTypeSelection();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Program createProgram()
  {
    ProgramImpl program = new ProgramImpl();
    return program;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Core createCore()
  {
    CoreImpl core = new CoreImpl();
    return core;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Action createAction()
  {
    ActionImpl action = new ActionImpl();
    return action;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public GoAction createGoAction()
  {
    GoActionImpl goAction = new GoActionImpl();
    return goAction;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Selection createSelection()
  {
    SelectionImpl selection = new SelectionImpl();
    return selection;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public LinkButtonSelection createLinkButtonSelection()
  {
    LinkButtonSelectionImpl linkButtonSelection = new LinkButtonSelectionImpl();
    return linkButtonSelection;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SearchfieldSelection createSearchfieldSelection()
  {
    SearchfieldSelectionImpl searchfieldSelection = new SearchfieldSelectionImpl();
    return searchfieldSelection;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public CheckboxSelection createCheckboxSelection()
  {
    CheckboxSelectionImpl checkboxSelection = new CheckboxSelectionImpl();
    return checkboxSelection;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ComboboxSelection createComboboxSelection()
  {
    ComboboxSelectionImpl comboboxSelection = new ComboboxSelectionImpl();
    return comboboxSelection;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DivSelection createDivSelection()
  {
    DivSelectionImpl divSelection = new DivSelectionImpl();
    return divSelection;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public GeneralAction createGeneralAction()
  {
    GeneralActionImpl generalAction = new GeneralActionImpl();
    return generalAction;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public StoreAction createStoreAction()
  {
    StoreActionImpl storeAction = new StoreActionImpl();
    return storeAction;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Var createVar()
  {
    VarImpl var = new VarImpl();
    return var;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SetAction createSetAction()
  {
    SetActionImpl setAction = new SetActionImpl();
    return setAction;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Element createElement()
  {
    ElementImpl element = new ElementImpl();
    return element;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TypeSelection createTypeSelection()
  {
    TypeSelectionImpl typeSelection = new TypeSelectionImpl();
    return typeSelection;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TestDslPackage getTestDslPackage()
  {
    return (TestDslPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static TestDslPackage getPackage()
  {
    return TestDslPackage.eINSTANCE;
  }

} //TestDslFactoryImpl
