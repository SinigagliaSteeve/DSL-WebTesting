/**
 * generated by Xtext 2.12.0
 */
package org.imt.sinigaglia.renaud.testDsl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.imt.sinigaglia.renaud.testDsl.CheckboxSelection;
import org.imt.sinigaglia.renaud.testDsl.ComboboxSelection;
import org.imt.sinigaglia.renaud.testDsl.DivSelection;
import org.imt.sinigaglia.renaud.testDsl.LinkButtonSelection;
import org.imt.sinigaglia.renaud.testDsl.SearchfieldSelection;
import org.imt.sinigaglia.renaud.testDsl.Selection;
import org.imt.sinigaglia.renaud.testDsl.TestDslPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Selection</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.imt.sinigaglia.renaud.testDsl.impl.SelectionImpl#getLinkButtonSelection <em>Link Button Selection</em>}</li>
 *   <li>{@link org.imt.sinigaglia.renaud.testDsl.impl.SelectionImpl#getSearchfieldSelection <em>Searchfield Selection</em>}</li>
 *   <li>{@link org.imt.sinigaglia.renaud.testDsl.impl.SelectionImpl#getCheckboxSelection <em>Checkbox Selection</em>}</li>
 *   <li>{@link org.imt.sinigaglia.renaud.testDsl.impl.SelectionImpl#getComboboxSelection <em>Combobox Selection</em>}</li>
 *   <li>{@link org.imt.sinigaglia.renaud.testDsl.impl.SelectionImpl#getDivSelection <em>Div Selection</em>}</li>
 * </ul>
 *
 * @generated
 */
public class SelectionImpl extends MinimalEObjectImpl.Container implements Selection
{
  /**
   * The cached value of the '{@link #getLinkButtonSelection() <em>Link Button Selection</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLinkButtonSelection()
   * @generated
   * @ordered
   */
  protected LinkButtonSelection linkButtonSelection;

  /**
   * The cached value of the '{@link #getSearchfieldSelection() <em>Searchfield Selection</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSearchfieldSelection()
   * @generated
   * @ordered
   */
  protected SearchfieldSelection searchfieldSelection;

  /**
   * The cached value of the '{@link #getCheckboxSelection() <em>Checkbox Selection</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCheckboxSelection()
   * @generated
   * @ordered
   */
  protected CheckboxSelection checkboxSelection;

  /**
   * The cached value of the '{@link #getComboboxSelection() <em>Combobox Selection</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getComboboxSelection()
   * @generated
   * @ordered
   */
  protected ComboboxSelection comboboxSelection;

  /**
   * The cached value of the '{@link #getDivSelection() <em>Div Selection</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDivSelection()
   * @generated
   * @ordered
   */
  protected DivSelection divSelection;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SelectionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return TestDslPackage.Literals.SELECTION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public LinkButtonSelection getLinkButtonSelection()
  {
    return linkButtonSelection;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetLinkButtonSelection(LinkButtonSelection newLinkButtonSelection, NotificationChain msgs)
  {
    LinkButtonSelection oldLinkButtonSelection = linkButtonSelection;
    linkButtonSelection = newLinkButtonSelection;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, TestDslPackage.SELECTION__LINK_BUTTON_SELECTION, oldLinkButtonSelection, newLinkButtonSelection);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setLinkButtonSelection(LinkButtonSelection newLinkButtonSelection)
  {
    if (newLinkButtonSelection != linkButtonSelection)
    {
      NotificationChain msgs = null;
      if (linkButtonSelection != null)
        msgs = ((InternalEObject)linkButtonSelection).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - TestDslPackage.SELECTION__LINK_BUTTON_SELECTION, null, msgs);
      if (newLinkButtonSelection != null)
        msgs = ((InternalEObject)newLinkButtonSelection).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - TestDslPackage.SELECTION__LINK_BUTTON_SELECTION, null, msgs);
      msgs = basicSetLinkButtonSelection(newLinkButtonSelection, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TestDslPackage.SELECTION__LINK_BUTTON_SELECTION, newLinkButtonSelection, newLinkButtonSelection));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SearchfieldSelection getSearchfieldSelection()
  {
    return searchfieldSelection;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSearchfieldSelection(SearchfieldSelection newSearchfieldSelection, NotificationChain msgs)
  {
    SearchfieldSelection oldSearchfieldSelection = searchfieldSelection;
    searchfieldSelection = newSearchfieldSelection;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, TestDslPackage.SELECTION__SEARCHFIELD_SELECTION, oldSearchfieldSelection, newSearchfieldSelection);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSearchfieldSelection(SearchfieldSelection newSearchfieldSelection)
  {
    if (newSearchfieldSelection != searchfieldSelection)
    {
      NotificationChain msgs = null;
      if (searchfieldSelection != null)
        msgs = ((InternalEObject)searchfieldSelection).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - TestDslPackage.SELECTION__SEARCHFIELD_SELECTION, null, msgs);
      if (newSearchfieldSelection != null)
        msgs = ((InternalEObject)newSearchfieldSelection).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - TestDslPackage.SELECTION__SEARCHFIELD_SELECTION, null, msgs);
      msgs = basicSetSearchfieldSelection(newSearchfieldSelection, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TestDslPackage.SELECTION__SEARCHFIELD_SELECTION, newSearchfieldSelection, newSearchfieldSelection));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public CheckboxSelection getCheckboxSelection()
  {
    return checkboxSelection;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetCheckboxSelection(CheckboxSelection newCheckboxSelection, NotificationChain msgs)
  {
    CheckboxSelection oldCheckboxSelection = checkboxSelection;
    checkboxSelection = newCheckboxSelection;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, TestDslPackage.SELECTION__CHECKBOX_SELECTION, oldCheckboxSelection, newCheckboxSelection);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setCheckboxSelection(CheckboxSelection newCheckboxSelection)
  {
    if (newCheckboxSelection != checkboxSelection)
    {
      NotificationChain msgs = null;
      if (checkboxSelection != null)
        msgs = ((InternalEObject)checkboxSelection).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - TestDslPackage.SELECTION__CHECKBOX_SELECTION, null, msgs);
      if (newCheckboxSelection != null)
        msgs = ((InternalEObject)newCheckboxSelection).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - TestDslPackage.SELECTION__CHECKBOX_SELECTION, null, msgs);
      msgs = basicSetCheckboxSelection(newCheckboxSelection, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TestDslPackage.SELECTION__CHECKBOX_SELECTION, newCheckboxSelection, newCheckboxSelection));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ComboboxSelection getComboboxSelection()
  {
    return comboboxSelection;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetComboboxSelection(ComboboxSelection newComboboxSelection, NotificationChain msgs)
  {
    ComboboxSelection oldComboboxSelection = comboboxSelection;
    comboboxSelection = newComboboxSelection;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, TestDslPackage.SELECTION__COMBOBOX_SELECTION, oldComboboxSelection, newComboboxSelection);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setComboboxSelection(ComboboxSelection newComboboxSelection)
  {
    if (newComboboxSelection != comboboxSelection)
    {
      NotificationChain msgs = null;
      if (comboboxSelection != null)
        msgs = ((InternalEObject)comboboxSelection).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - TestDslPackage.SELECTION__COMBOBOX_SELECTION, null, msgs);
      if (newComboboxSelection != null)
        msgs = ((InternalEObject)newComboboxSelection).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - TestDslPackage.SELECTION__COMBOBOX_SELECTION, null, msgs);
      msgs = basicSetComboboxSelection(newComboboxSelection, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TestDslPackage.SELECTION__COMBOBOX_SELECTION, newComboboxSelection, newComboboxSelection));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DivSelection getDivSelection()
  {
    return divSelection;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDivSelection(DivSelection newDivSelection, NotificationChain msgs)
  {
    DivSelection oldDivSelection = divSelection;
    divSelection = newDivSelection;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, TestDslPackage.SELECTION__DIV_SELECTION, oldDivSelection, newDivSelection);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDivSelection(DivSelection newDivSelection)
  {
    if (newDivSelection != divSelection)
    {
      NotificationChain msgs = null;
      if (divSelection != null)
        msgs = ((InternalEObject)divSelection).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - TestDslPackage.SELECTION__DIV_SELECTION, null, msgs);
      if (newDivSelection != null)
        msgs = ((InternalEObject)newDivSelection).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - TestDslPackage.SELECTION__DIV_SELECTION, null, msgs);
      msgs = basicSetDivSelection(newDivSelection, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TestDslPackage.SELECTION__DIV_SELECTION, newDivSelection, newDivSelection));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case TestDslPackage.SELECTION__LINK_BUTTON_SELECTION:
        return basicSetLinkButtonSelection(null, msgs);
      case TestDslPackage.SELECTION__SEARCHFIELD_SELECTION:
        return basicSetSearchfieldSelection(null, msgs);
      case TestDslPackage.SELECTION__CHECKBOX_SELECTION:
        return basicSetCheckboxSelection(null, msgs);
      case TestDslPackage.SELECTION__COMBOBOX_SELECTION:
        return basicSetComboboxSelection(null, msgs);
      case TestDslPackage.SELECTION__DIV_SELECTION:
        return basicSetDivSelection(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case TestDslPackage.SELECTION__LINK_BUTTON_SELECTION:
        return getLinkButtonSelection();
      case TestDslPackage.SELECTION__SEARCHFIELD_SELECTION:
        return getSearchfieldSelection();
      case TestDslPackage.SELECTION__CHECKBOX_SELECTION:
        return getCheckboxSelection();
      case TestDslPackage.SELECTION__COMBOBOX_SELECTION:
        return getComboboxSelection();
      case TestDslPackage.SELECTION__DIV_SELECTION:
        return getDivSelection();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case TestDslPackage.SELECTION__LINK_BUTTON_SELECTION:
        setLinkButtonSelection((LinkButtonSelection)newValue);
        return;
      case TestDslPackage.SELECTION__SEARCHFIELD_SELECTION:
        setSearchfieldSelection((SearchfieldSelection)newValue);
        return;
      case TestDslPackage.SELECTION__CHECKBOX_SELECTION:
        setCheckboxSelection((CheckboxSelection)newValue);
        return;
      case TestDslPackage.SELECTION__COMBOBOX_SELECTION:
        setComboboxSelection((ComboboxSelection)newValue);
        return;
      case TestDslPackage.SELECTION__DIV_SELECTION:
        setDivSelection((DivSelection)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case TestDslPackage.SELECTION__LINK_BUTTON_SELECTION:
        setLinkButtonSelection((LinkButtonSelection)null);
        return;
      case TestDslPackage.SELECTION__SEARCHFIELD_SELECTION:
        setSearchfieldSelection((SearchfieldSelection)null);
        return;
      case TestDslPackage.SELECTION__CHECKBOX_SELECTION:
        setCheckboxSelection((CheckboxSelection)null);
        return;
      case TestDslPackage.SELECTION__COMBOBOX_SELECTION:
        setComboboxSelection((ComboboxSelection)null);
        return;
      case TestDslPackage.SELECTION__DIV_SELECTION:
        setDivSelection((DivSelection)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case TestDslPackage.SELECTION__LINK_BUTTON_SELECTION:
        return linkButtonSelection != null;
      case TestDslPackage.SELECTION__SEARCHFIELD_SELECTION:
        return searchfieldSelection != null;
      case TestDslPackage.SELECTION__CHECKBOX_SELECTION:
        return checkboxSelection != null;
      case TestDslPackage.SELECTION__COMBOBOX_SELECTION:
        return comboboxSelection != null;
      case TestDslPackage.SELECTION__DIV_SELECTION:
        return divSelection != null;
    }
    return super.eIsSet(featureID);
  }

} //SelectionImpl
