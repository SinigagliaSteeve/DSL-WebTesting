/*
 * generated by Xtext 2.12.0
 */
grammar InternalTestdsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.imt.sinigaglia.renaud.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.imt.sinigaglia.renaud.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.imt.sinigaglia.renaud.services.TestdslGrammarAccess;

}

@parser::members {

 	private TestdslGrammarAccess grammarAccess;

    public InternalTestdslParser(TokenStream input, TestdslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Program";
   	}

   	@Override
   	protected TestdslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleProgram
entryRuleProgram returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProgramRule()); }
	iv_ruleProgram=ruleProgram
	{ $current=$iv_ruleProgram.current; }
	EOF;

// Rule Program
ruleProgram returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getProgramAccess().getCoreCoreParserRuleCall_0());
			}
			lv_core_0_0=ruleCore
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getProgramRule());
				}
				set(
					$current,
					"core",
					lv_core_0_0,
					"org.imt.sinigaglia.renaud.Testdsl.Core");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleCore
entryRuleCore returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCoreRule()); }
	iv_ruleCore=ruleCore
	{ $current=$iv_ruleCore.current; }
	EOF;

// Rule Core
ruleCore returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='open browser'
		{
			newLeafNode(otherlv_0, grammarAccess.getCoreAccess().getOpenBrowserKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCoreAccess().getNameBrowserParserRuleCall_1_0());
				}
				lv_name_1_0=ruleBrowser
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCoreRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.imt.sinigaglia.renaud.Testdsl.Browser");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getCoreAccess().getActionsActionParserRuleCall_2_0());
				}
				lv_actions_2_0=ruleAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCoreRule());
					}
					add(
						$current,
						"actions",
						lv_actions_2_0,
						"org.imt.sinigaglia.renaud.Testdsl.Action");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleBrowser
entryRuleBrowser returns [String current=null]:
	{ newCompositeNode(grammarAccess.getBrowserRule()); }
	iv_ruleBrowser=ruleBrowser
	{ $current=$iv_ruleBrowser.current.getText(); }
	EOF;

// Rule Browser
ruleBrowser returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='chrome'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBrowserAccess().getChromeKeyword_0());
		}
		    |
		kw='firefox'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBrowserAccess().getFirefoxKeyword_1());
		}
		    |
		kw='safari'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBrowserAccess().getSafariKeyword_2());
		}
		    |
		kw='edge'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBrowserAccess().getEdgeKeyword_3());
		}
		    |
		kw='ie'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBrowserAccess().getIeKeyword_4());
		}
	)
;

// Entry rule entryRuleAction
entryRuleAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActionRule()); }
	iv_ruleAction=ruleAction
	{ $current=$iv_ruleAction.current; }
	EOF;

// Rule Action
ruleAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getActionAccess().getGoActionsGoActionParserRuleCall_0_0());
				}
				lv_goActions_0_0=ruleGoAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getActionRule());
					}
					add(
						$current,
						"goActions",
						lv_goActions_0_0,
						"org.imt.sinigaglia.renaud.Testdsl.GoAction");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getActionAccess().getSelectionsSelectionParserRuleCall_1_0());
				}
				lv_selections_1_0=ruleSelection
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getActionRule());
					}
					add(
						$current,
						"selections",
						lv_selections_1_0,
						"org.imt.sinigaglia.renaud.Testdsl.Selection");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleGoAction
entryRuleGoAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGoActionRule()); }
	iv_ruleGoAction=ruleGoAction
	{ $current=$iv_ruleGoAction.current; }
	EOF;

// Rule GoAction
ruleGoAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='go'
		{
			newLeafNode(otherlv_0, grammarAccess.getGoActionAccess().getGoKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_STRING
				{
					newLeafNode(lv_name_1_0, grammarAccess.getGoActionAccess().getNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGoActionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleSelection
entryRuleSelection returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSelectionRule()); }
	iv_ruleSelection=ruleSelection
	{ $current=$iv_ruleSelection.current; }
	EOF;

// Rule Selection
ruleSelection returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSelectionAccess().getLinkButtonSelectionLinkButtonSelectionParserRuleCall_0_0());
				}
				lv_linkButtonSelection_0_0=ruleLinkButtonSelection
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSelectionRule());
					}
					set(
						$current,
						"linkButtonSelection",
						lv_linkButtonSelection_0_0,
						"org.imt.sinigaglia.renaud.Testdsl.LinkButtonSelection");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getSelectionAccess().getSearchfieldSelectionSearchfieldSelectionParserRuleCall_1_0());
				}
				lv_searchfieldSelection_1_0=ruleSearchfieldSelection
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSelectionRule());
					}
					set(
						$current,
						"searchfieldSelection",
						lv_searchfieldSelection_1_0,
						"org.imt.sinigaglia.renaud.Testdsl.SearchfieldSelection");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getSelectionAccess().getCheckboxSelectionCheckboxSelectionParserRuleCall_2_0());
				}
				lv_checkboxSelection_2_0=ruleCheckboxSelection
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSelectionRule());
					}
					set(
						$current,
						"checkboxSelection",
						lv_checkboxSelection_2_0,
						"org.imt.sinigaglia.renaud.Testdsl.CheckboxSelection");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getSelectionAccess().getComboboxSelectionComboboxSelectionParserRuleCall_3_0());
				}
				lv_comboboxSelection_3_0=ruleComboboxSelection
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSelectionRule());
					}
					set(
						$current,
						"comboboxSelection",
						lv_comboboxSelection_3_0,
						"org.imt.sinigaglia.renaud.Testdsl.ComboboxSelection");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getSelectionAccess().getDivSelectionDivSelectionParserRuleCall_4_0());
				}
				lv_divSelection_4_0=ruleDivSelection
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSelectionRule());
					}
					set(
						$current,
						"divSelection",
						lv_divSelection_4_0,
						"org.imt.sinigaglia.renaud.Testdsl.DivSelection");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleLinkButtonSelection
entryRuleLinkButtonSelection returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLinkButtonSelectionRule()); }
	iv_ruleLinkButtonSelection=ruleLinkButtonSelection
	{ $current=$iv_ruleLinkButtonSelection.current; }
	EOF;

// Rule LinkButtonSelection
ruleLinkButtonSelection returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='LINK'
		{
			newLeafNode(otherlv_0, grammarAccess.getLinkButtonSelectionAccess().getLINKKeyword_0());
		}
		    |
		(
			otherlv_1='BUTTON'
			{
				newLeafNode(otherlv_1, grammarAccess.getLinkButtonSelectionAccess().getBUTTONKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLinkButtonSelectionAccess().getTypeSelectionTypeSelectionParserRuleCall_1_1_0());
					}
					lv_typeSelection_2_0=ruleTypeSelection
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLinkButtonSelectionRule());
						}
						set(
							$current,
							"typeSelection",
							lv_typeSelection_2_0,
							"org.imt.sinigaglia.renaud.Testdsl.TypeSelection");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3='{'
			{
				newLeafNode(otherlv_3, grammarAccess.getLinkButtonSelectionAccess().getLeftCurlyBracketKeyword_1_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLinkButtonSelectionAccess().getGeneralActionsGeneralActionParserRuleCall_1_3_0());
					}
					lv_generalActions_4_0=ruleGeneralAction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLinkButtonSelectionRule());
						}
						set(
							$current,
							"generalActions",
							lv_generalActions_4_0,
							"org.imt.sinigaglia.renaud.Testdsl.GeneralAction");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			otherlv_5='click'
			{
				newLeafNode(otherlv_5, grammarAccess.getLinkButtonSelectionAccess().getClickKeyword_2_0());
			}
			otherlv_6='}'
			{
				newLeafNode(otherlv_6, grammarAccess.getLinkButtonSelectionAccess().getRightCurlyBracketKeyword_2_1());
			}
		)
	)
;

// Entry rule entryRuleSearchfieldSelection
entryRuleSearchfieldSelection returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSearchfieldSelectionRule()); }
	iv_ruleSearchfieldSelection=ruleSearchfieldSelection
	{ $current=$iv_ruleSearchfieldSelection.current; }
	EOF;

// Rule SearchfieldSelection
ruleSearchfieldSelection returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='SEARCH_FIELD'
		{
			newLeafNode(otherlv_0, grammarAccess.getSearchfieldSelectionAccess().getSEARCH_FIELDKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSearchfieldSelectionAccess().getTypeSelectionTypeSelectionParserRuleCall_1_0());
				}
				lv_typeSelection_1_0=ruleTypeSelection
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSearchfieldSelectionRule());
					}
					set(
						$current,
						"typeSelection",
						lv_typeSelection_1_0,
						"org.imt.sinigaglia.renaud.Testdsl.TypeSelection");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getSearchfieldSelectionAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSearchfieldSelectionAccess().getGeneralActionGeneralActionParserRuleCall_3_0());
				}
				lv_generalAction_3_0=ruleGeneralAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSearchfieldSelectionRule());
					}
					set(
						$current,
						"generalAction",
						lv_generalAction_3_0,
						"org.imt.sinigaglia.renaud.Testdsl.GeneralAction");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getSearchfieldSelectionAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleCheckboxSelection
entryRuleCheckboxSelection returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCheckboxSelectionRule()); }
	iv_ruleCheckboxSelection=ruleCheckboxSelection
	{ $current=$iv_ruleCheckboxSelection.current; }
	EOF;

// Rule CheckboxSelection
ruleCheckboxSelection returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='CHECKBOX'
		{
			newLeafNode(otherlv_0, grammarAccess.getCheckboxSelectionAccess().getCHECKBOXKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCheckboxSelectionAccess().getTypeSelectionTypeSelectionParserRuleCall_1_0());
				}
				lv_typeSelection_1_0=ruleTypeSelection
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCheckboxSelectionRule());
					}
					set(
						$current,
						"typeSelection",
						lv_typeSelection_1_0,
						"org.imt.sinigaglia.renaud.Testdsl.TypeSelection");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getCheckboxSelectionAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getCheckboxSelectionAccess().getGeneralActionGeneralActionParserRuleCall_3_0_0());
					}
					lv_generalAction_3_0=ruleGeneralAction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCheckboxSelectionRule());
						}
						set(
							$current,
							"generalAction",
							lv_generalAction_3_0,
							"org.imt.sinigaglia.renaud.Testdsl.GeneralAction");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			otherlv_4='check'
			{
				newLeafNode(otherlv_4, grammarAccess.getCheckboxSelectionAccess().getCheckKeyword_3_1());
			}
			    |
			otherlv_5='uncheck'
			{
				newLeafNode(otherlv_5, grammarAccess.getCheckboxSelectionAccess().getUncheckKeyword_3_2());
			}
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getCheckboxSelectionAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleComboboxSelection
entryRuleComboboxSelection returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComboboxSelectionRule()); }
	iv_ruleComboboxSelection=ruleComboboxSelection
	{ $current=$iv_ruleComboboxSelection.current; }
	EOF;

// Rule ComboboxSelection
ruleComboboxSelection returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='COMBO_BOX'
		{
			newLeafNode(otherlv_0, grammarAccess.getComboboxSelectionAccess().getCOMBO_BOXKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getComboboxSelectionAccess().getTypeSelectionTypeSelectionParserRuleCall_1_0());
				}
				lv_typeSelection_1_0=ruleTypeSelection
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComboboxSelectionRule());
					}
					set(
						$current,
						"typeSelection",
						lv_typeSelection_1_0,
						"org.imt.sinigaglia.renaud.Testdsl.TypeSelection");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getComboboxSelectionAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getComboboxSelectionAccess().getGeneralActionGeneralActionParserRuleCall_3_0_0());
					}
					lv_generalAction_3_0=ruleGeneralAction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getComboboxSelectionRule());
						}
						set(
							$current,
							"generalAction",
							lv_generalAction_3_0,
							"org.imt.sinigaglia.renaud.Testdsl.GeneralAction");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				otherlv_4='select'
				{
					newLeafNode(otherlv_4, grammarAccess.getComboboxSelectionAccess().getSelectKeyword_3_1_0());
				}
				(
					(
						lv_value_5_0=RULE_STRING
						{
							newLeafNode(lv_value_5_0, grammarAccess.getComboboxSelectionAccess().getValueSTRINGTerminalRuleCall_3_1_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getComboboxSelectionRule());
							}
							setWithLastConsumed(
								$current,
								"value",
								lv_value_5_0,
								"org.eclipse.xtext.common.Terminals.STRING");
						}
					)
				)
			)
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getComboboxSelectionAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleDivSelection
entryRuleDivSelection returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDivSelectionRule()); }
	iv_ruleDivSelection=ruleDivSelection
	{ $current=$iv_ruleDivSelection.current; }
	EOF;

// Rule DivSelection
ruleDivSelection returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='DIV'
			{
				newLeafNode(otherlv_0, grammarAccess.getDivSelectionAccess().getDIVKeyword_0_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDivSelectionAccess().getTypeSelectionTypeSelectionParserRuleCall_0_1_0());
					}
					lv_typeSelection_1_0=ruleTypeSelection
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDivSelectionRule());
						}
						set(
							$current,
							"typeSelection",
							lv_typeSelection_1_0,
							"org.imt.sinigaglia.renaud.Testdsl.TypeSelection");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_2='{'
			{
				newLeafNode(otherlv_2, grammarAccess.getDivSelectionAccess().getLeftCurlyBracketKeyword_0_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDivSelectionAccess().getGeneralActionGeneralActionParserRuleCall_0_3_0());
					}
					lv_generalAction_3_0=ruleGeneralAction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDivSelectionRule());
						}
						set(
							$current,
							"generalAction",
							lv_generalAction_3_0,
							"org.imt.sinigaglia.renaud.Testdsl.GeneralAction");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			otherlv_4='click'
			{
				newLeafNode(otherlv_4, grammarAccess.getDivSelectionAccess().getClickKeyword_1_0());
			}
			otherlv_5='}'
			{
				newLeafNode(otherlv_5, grammarAccess.getDivSelectionAccess().getRightCurlyBracketKeyword_1_1());
			}
		)
	)
;

// Entry rule entryRuleGeneralAction
entryRuleGeneralAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGeneralActionRule()); }
	iv_ruleGeneralAction=ruleGeneralAction
	{ $current=$iv_ruleGeneralAction.current; }
	EOF;

// Rule GeneralAction
ruleGeneralAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getGeneralActionAccess().getSetActionSetActionParserRuleCall_0_0());
				}
				lv_setAction_0_0=ruleSetAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGeneralActionRule());
					}
					set(
						$current,
						"setAction",
						lv_setAction_0_0,
						"org.imt.sinigaglia.renaud.Testdsl.SetAction");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getGeneralActionAccess().getStoreActionStoreActionParserRuleCall_1_0());
				}
				lv_storeAction_1_0=ruleStoreAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGeneralActionRule());
					}
					set(
						$current,
						"storeAction",
						lv_storeAction_1_0,
						"org.imt.sinigaglia.renaud.Testdsl.StoreAction");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleStoreAction
entryRuleStoreAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStoreActionRule()); }
	iv_ruleStoreAction=ruleStoreAction
	{ $current=$iv_ruleStoreAction.current; }
	EOF;

// Rule StoreAction
ruleStoreAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='store'
		{
			newLeafNode(otherlv_0, grammarAccess.getStoreActionAccess().getStoreKeyword_0());
		}
		otherlv_1='()'
		{
			newLeafNode(otherlv_1, grammarAccess.getStoreActionAccess().getLeftParenthesisRightParenthesisKeyword_1());
		}
		otherlv_2='in'
		{
			newLeafNode(otherlv_2, grammarAccess.getStoreActionAccess().getInKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStoreActionAccess().getVarVarParserRuleCall_3_0());
				}
				lv_var_3_0=ruleVar
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStoreActionRule());
					}
					set(
						$current,
						"var",
						lv_var_3_0,
						"org.imt.sinigaglia.renaud.Testdsl.Var");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleVar
entryRuleVar returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVarRule()); }
	iv_ruleVar=ruleVar
	{ $current=$iv_ruleVar.current; }
	EOF;

// Rule Var
ruleVar returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_STRING
			{
				newLeafNode(lv_name_0_0, grammarAccess.getVarAccess().getNameSTRINGTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getVarRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.STRING");
			}
		)
	)
;

// Entry rule entryRuleSetAction
entryRuleSetAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSetActionRule()); }
	iv_ruleSetAction=ruleSetAction
	{ $current=$iv_ruleSetAction.current; }
	EOF;

// Rule SetAction
ruleSetAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='set'
		{
			newLeafNode(otherlv_0, grammarAccess.getSetActionAccess().getSetKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSetActionAccess().getAttributeAttributeParserRuleCall_1_0());
				}
				lv_attribute_1_0=ruleAttribute
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSetActionRule());
					}
					set(
						$current,
						"attribute",
						lv_attribute_1_0,
						"org.imt.sinigaglia.renaud.Testdsl.Attribute");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getSetActionAccess().getColonKeyword_2());
		}
		(
			(
				lv_value_3_0=RULE_STRING
				{
					newLeafNode(lv_value_3_0, grammarAccess.getSetActionAccess().getValueSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSetActionRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleHTMLElement
entryRuleHTMLElement returns [String current=null]:
	{ newCompositeNode(grammarAccess.getHTMLElementRule()); }
	iv_ruleHTMLElement=ruleHTMLElement
	{ $current=$iv_ruleHTMLElement.current.getText(); }
	EOF;

// Rule HTMLElement
ruleHTMLElement returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='SEARCH_FIELD'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getHTMLElementAccess().getSEARCH_FIELDKeyword_0());
		}
		    |
		kw='BUTTON'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getHTMLElementAccess().getBUTTONKeyword_1());
		}
		    |
		kw='LINK'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getHTMLElementAccess().getLINKKeyword_2());
		}
		    |
		kw='CHECKBOX'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getHTMLElementAccess().getCHECKBOXKeyword_3());
		}
		    |
		kw='COMBO_BOX'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getHTMLElementAccess().getCOMBO_BOXKeyword_4());
		}
		    |
		kw='DIV'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getHTMLElementAccess().getDIVKeyword_5());
		}
		    |
		kw='IMAGE'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getHTMLElementAccess().getIMAGEKeyword_6());
		}
	)
;

// Entry rule entryRuleTypeSelection
entryRuleTypeSelection returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeSelectionRule()); }
	iv_ruleTypeSelection=ruleTypeSelection
	{ $current=$iv_ruleTypeSelection.current; }
	EOF;

// Rule TypeSelection
ruleTypeSelection returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getTypeSelectionAccess().getAttributeAttributeParserRuleCall_0_0_0());
					}
					lv_attribute_0_0=ruleAttribute
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTypeSelectionRule());
						}
						set(
							$current,
							"attribute",
							lv_attribute_0_0,
							"org.imt.sinigaglia.renaud.Testdsl.Attribute");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_1=':'
			{
				newLeafNode(otherlv_1, grammarAccess.getTypeSelectionAccess().getColonKeyword_0_1());
			}
			(
				(
					lv_value_2_0=RULE_STRING
					{
						newLeafNode(lv_value_2_0, grammarAccess.getTypeSelectionAccess().getValueSTRINGTerminalRuleCall_0_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTypeSelectionRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_2_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)
		    |
		otherlv_3='PARENT'
		{
			newLeafNode(otherlv_3, grammarAccess.getTypeSelectionAccess().getPARENTKeyword_1());
		}
		    |
		otherlv_4='FIRST'
		{
			newLeafNode(otherlv_4, grammarAccess.getTypeSelectionAccess().getFIRSTKeyword_2());
		}
		    |
		otherlv_5='LAST'
		{
			newLeafNode(otherlv_5, grammarAccess.getTypeSelectionAccess().getLASTKeyword_3());
		}
		    |
		otherlv_6='ALL'
		{
			newLeafNode(otherlv_6, grammarAccess.getTypeSelectionAccess().getALLKeyword_4());
		}
	)
;

// Entry rule entryRuleAttribute
entryRuleAttribute returns [String current=null]:
	{ newCompositeNode(grammarAccess.getAttributeRule()); }
	iv_ruleAttribute=ruleAttribute
	{ $current=$iv_ruleAttribute.current.getText(); }
	EOF;

// Rule Attribute
ruleAttribute returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='LABEL'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAttributeAccess().getLABELKeyword_0());
		}
		    |
		kw='ID'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAttributeAccess().getIDKeyword_1());
		}
		    |
		kw='CLASS'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAttributeAccess().getCLASSKeyword_2());
		}
		    |
		kw='ALT'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAttributeAccess().getALTKeyword_3());
		}
		    |
		kw='VALUE'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAttributeAccess().getVALUEKeyword_4());
		}
		    |
		kw='HREF'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAttributeAccess().getHREFKeyword_5());
		}
		    |
		kw='TITLE'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAttributeAccess().getTITLEKeyword_6());
		}
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
