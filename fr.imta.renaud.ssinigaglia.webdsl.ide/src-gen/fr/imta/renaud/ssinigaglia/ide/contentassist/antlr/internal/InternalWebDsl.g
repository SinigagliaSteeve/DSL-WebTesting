/*
 * generated by Xtext 2.12.0
 */
grammar InternalWebDsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package fr.imta.renaud.ssinigaglia.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package fr.imta.renaud.ssinigaglia.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import fr.imta.renaud.ssinigaglia.services.WebDslGrammarAccess;

}
@parser::members {
	private WebDslGrammarAccess grammarAccess;

	public void setGrammarAccess(WebDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleProgram
entryRuleProgram
:
{ before(grammarAccess.getProgramRule()); }
	 ruleProgram
{ after(grammarAccess.getProgramRule()); } 
	 EOF 
;

// Rule Program
ruleProgram 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProgramAccess().getCoreAssignment()); }
		(rule__Program__CoreAssignment)
		{ after(grammarAccess.getProgramAccess().getCoreAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCore
entryRuleCore
:
{ before(grammarAccess.getCoreRule()); }
	 ruleCore
{ after(grammarAccess.getCoreRule()); } 
	 EOF 
;

// Rule Core
ruleCore 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCoreAccess().getGroup()); }
		(rule__Core__Group__0)
		{ after(grammarAccess.getCoreAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAction
entryRuleAction
:
{ before(grammarAccess.getActionRule()); }
	 ruleAction
{ after(grammarAccess.getActionRule()); } 
	 EOF 
;

// Rule Action
ruleAction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActionAccess().getAlternatives()); }
		(rule__Action__Alternatives)
		{ after(grammarAccess.getActionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGoAction
entryRuleGoAction
:
{ before(grammarAccess.getGoActionRule()); }
	 ruleGoAction
{ after(grammarAccess.getGoActionRule()); } 
	 EOF 
;

// Rule GoAction
ruleGoAction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGoActionAccess().getGroup()); }
		(rule__GoAction__Group__0)
		{ after(grammarAccess.getGoActionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSelection
entryRuleSelection
:
{ before(grammarAccess.getSelectionRule()); }
	 ruleSelection
{ after(grammarAccess.getSelectionRule()); } 
	 EOF 
;

// Rule Selection
ruleSelection 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSelectionAccess().getAlternatives()); }
		(rule__Selection__Alternatives)
		{ after(grammarAccess.getSelectionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLinkButtonSelection
entryRuleLinkButtonSelection
:
{ before(grammarAccess.getLinkButtonSelectionRule()); }
	 ruleLinkButtonSelection
{ after(grammarAccess.getLinkButtonSelectionRule()); } 
	 EOF 
;

// Rule LinkButtonSelection
ruleLinkButtonSelection 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLinkButtonSelectionAccess().getGroup()); }
		(rule__LinkButtonSelection__Group__0)
		{ after(grammarAccess.getLinkButtonSelectionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGeneralSelection
entryRuleGeneralSelection
:
{ before(grammarAccess.getGeneralSelectionRule()); }
	 ruleGeneralSelection
{ after(grammarAccess.getGeneralSelectionRule()); } 
	 EOF 
;

// Rule GeneralSelection
ruleGeneralSelection 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGeneralSelectionAccess().getGroup()); }
		(rule__GeneralSelection__Group__0)
		{ after(grammarAccess.getGeneralSelectionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCheckboxSelection
entryRuleCheckboxSelection
:
{ before(grammarAccess.getCheckboxSelectionRule()); }
	 ruleCheckboxSelection
{ after(grammarAccess.getCheckboxSelectionRule()); } 
	 EOF 
;

// Rule CheckboxSelection
ruleCheckboxSelection 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCheckboxSelectionAccess().getGroup()); }
		(rule__CheckboxSelection__Group__0)
		{ after(grammarAccess.getCheckboxSelectionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComboboxSelection
entryRuleComboboxSelection
:
{ before(grammarAccess.getComboboxSelectionRule()); }
	 ruleComboboxSelection
{ after(grammarAccess.getComboboxSelectionRule()); } 
	 EOF 
;

// Rule ComboboxSelection
ruleComboboxSelection 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComboboxSelectionAccess().getGroup()); }
		(rule__ComboboxSelection__Group__0)
		{ after(grammarAccess.getComboboxSelectionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePageSelection
entryRulePageSelection
:
{ before(grammarAccess.getPageSelectionRule()); }
	 rulePageSelection
{ after(grammarAccess.getPageSelectionRule()); } 
	 EOF 
;

// Rule PageSelection
rulePageSelection 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPageSelectionAccess().getGroup()); }
		(rule__PageSelection__Group__0)
		{ after(grammarAccess.getPageSelectionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGeneralAction
entryRuleGeneralAction
:
{ before(grammarAccess.getGeneralActionRule()); }
	 ruleGeneralAction
{ after(grammarAccess.getGeneralActionRule()); } 
	 EOF 
;

// Rule GeneralAction
ruleGeneralAction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGeneralActionAccess().getAlternatives()); }
		(rule__GeneralAction__Alternatives)
		{ after(grammarAccess.getGeneralActionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStoreAction
entryRuleStoreAction
:
{ before(grammarAccess.getStoreActionRule()); }
	 ruleStoreAction
{ after(grammarAccess.getStoreActionRule()); } 
	 EOF 
;

// Rule StoreAction
ruleStoreAction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStoreActionAccess().getGroup()); }
		(rule__StoreAction__Group__0)
		{ after(grammarAccess.getStoreActionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVar
entryRuleVar
:
{ before(grammarAccess.getVarRule()); }
	 ruleVar
{ after(grammarAccess.getVarRule()); } 
	 EOF 
;

// Rule Var
ruleVar 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVarAccess().getNameAssignment()); }
		(rule__Var__NameAssignment)
		{ after(grammarAccess.getVarAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSetAction
entryRuleSetAction
:
{ before(grammarAccess.getSetActionRule()); }
	 ruleSetAction
{ after(grammarAccess.getSetActionRule()); } 
	 EOF 
;

// Rule SetAction
ruleSetAction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSetActionAccess().getGroup()); }
		(rule__SetAction__Group__0)
		{ after(grammarAccess.getSetActionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeSelection
entryRuleTypeSelection
:
{ before(grammarAccess.getTypeSelectionRule()); }
	 ruleTypeSelection
{ after(grammarAccess.getTypeSelectionRule()); } 
	 EOF 
;

// Rule TypeSelection
ruleTypeSelection 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeSelectionAccess().getAlternatives()); }
		(rule__TypeSelection__Alternatives)
		{ after(grammarAccess.getTypeSelectionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssert
entryRuleAssert
:
{ before(grammarAccess.getAssertRule()); }
	 ruleAssert
{ after(grammarAccess.getAssertRule()); } 
	 EOF 
;

// Rule Assert
ruleAssert 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssertAccess().getGroup()); }
		(rule__Assert__Group__0)
		{ after(grammarAccess.getAssertAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssertContains
entryRuleAssertContains
:
{ before(grammarAccess.getAssertContainsRule()); }
	 ruleAssertContains
{ after(grammarAccess.getAssertContainsRule()); } 
	 EOF 
;

// Rule AssertContains
ruleAssertContains 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssertContainsAccess().getGroup()); }
		(rule__AssertContains__Group__0)
		{ after(grammarAccess.getAssertContainsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssertEquals
entryRuleAssertEquals
:
{ before(grammarAccess.getAssertEqualsRule()); }
	 ruleAssertEquals
{ after(grammarAccess.getAssertEqualsRule()); } 
	 EOF 
;

// Rule AssertEquals
ruleAssertEquals 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssertEqualsAccess().getGroup()); }
		(rule__AssertEquals__Group__0)
		{ after(grammarAccess.getAssertEqualsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComparable
entryRuleComparable
:
{ before(grammarAccess.getComparableRule()); }
	 ruleComparable
{ after(grammarAccess.getComparableRule()); } 
	 EOF 
;

// Rule Comparable
ruleComparable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComparableAccess().getAlternatives()); }
		(rule__Comparable__Alternatives)
		{ after(grammarAccess.getComparableAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Browser
ruleBrowser
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBrowserAccess().getAlternatives()); }
		(rule__Browser__Alternatives)
		{ after(grammarAccess.getBrowserAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule HtmlElement
ruleHtmlElement
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHtmlElementAccess().getAlternatives()); }
		(rule__HtmlElement__Alternatives)
		{ after(grammarAccess.getHtmlElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Attribute
ruleAttribute
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getAlternatives()); }
		(rule__Attribute__Alternatives)
		{ after(grammarAccess.getAttributeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getGoActionAssignment_0()); }
		(rule__Action__GoActionAssignment_0)
		{ after(grammarAccess.getActionAccess().getGoActionAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getActionAccess().getSelectionAssignment_1()); }
		(rule__Action__SelectionAssignment_1)
		{ after(grammarAccess.getActionAccess().getSelectionAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectionAccess().getLinkButtonSelectionAssignment_0()); }
		(rule__Selection__LinkButtonSelectionAssignment_0)
		{ after(grammarAccess.getSelectionAccess().getLinkButtonSelectionAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getSelectionAccess().getGeneralSelectionAssignment_1()); }
		(rule__Selection__GeneralSelectionAssignment_1)
		{ after(grammarAccess.getSelectionAccess().getGeneralSelectionAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getSelectionAccess().getCheckboxSelectionAssignment_2()); }
		(rule__Selection__CheckboxSelectionAssignment_2)
		{ after(grammarAccess.getSelectionAccess().getCheckboxSelectionAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getSelectionAccess().getComboboxSelectionAssignment_3()); }
		(rule__Selection__ComboboxSelectionAssignment_3)
		{ after(grammarAccess.getSelectionAccess().getComboboxSelectionAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getSelectionAccess().getPageSelectionAssignment_4()); }
		(rule__Selection__PageSelectionAssignment_4)
		{ after(grammarAccess.getSelectionAccess().getPageSelectionAssignment_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkButtonSelection__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinkButtonSelectionAccess().getLINKKeyword_0_0()); }
		'LINK'
		{ after(grammarAccess.getLinkButtonSelectionAccess().getLINKKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getLinkButtonSelectionAccess().getBUTTONKeyword_0_1()); }
		'BUTTON'
		{ after(grammarAccess.getLinkButtonSelectionAccess().getBUTTONKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkButtonSelection__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinkButtonSelectionAccess().getGeneralActionsAssignment_3_0()); }
		(rule__LinkButtonSelection__GeneralActionsAssignment_3_0)
		{ after(grammarAccess.getLinkButtonSelectionAccess().getGeneralActionsAssignment_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getLinkButtonSelectionAccess().getClickKeyword_3_1()); }
		'click'
		{ after(grammarAccess.getLinkButtonSelectionAccess().getClickKeyword_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralSelection__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeneralSelectionAccess().getSEARCH_FIELDKeyword_0_0()); }
		'SEARCH_FIELD'
		{ after(grammarAccess.getGeneralSelectionAccess().getSEARCH_FIELDKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getGeneralSelectionAccess().getDIVKeyword_0_1()); }
		'DIV'
		{ after(grammarAccess.getGeneralSelectionAccess().getDIVKeyword_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getGeneralSelectionAccess().getAKeyword_0_2()); }
		'A'
		{ after(grammarAccess.getGeneralSelectionAccess().getAKeyword_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckboxSelection__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCheckboxSelectionAccess().getGeneralActionsAssignment_3_0()); }
		(rule__CheckboxSelection__GeneralActionsAssignment_3_0)
		{ after(grammarAccess.getCheckboxSelectionAccess().getGeneralActionsAssignment_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getCheckboxSelectionAccess().getCheckKeyword_3_1()); }
		'check'
		{ after(grammarAccess.getCheckboxSelectionAccess().getCheckKeyword_3_1()); }
	)
	|
	(
		{ before(grammarAccess.getCheckboxSelectionAccess().getUncheckKeyword_3_2()); }
		'uncheck'
		{ after(grammarAccess.getCheckboxSelectionAccess().getUncheckKeyword_3_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComboboxSelection__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComboboxSelectionAccess().getGeneralActionsAssignment_3_0()); }
		(rule__ComboboxSelection__GeneralActionsAssignment_3_0)
		{ after(grammarAccess.getComboboxSelectionAccess().getGeneralActionsAssignment_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getComboboxSelectionAccess().getGroup_3_1()); }
		(rule__ComboboxSelection__Group_3_1__0)
		{ after(grammarAccess.getComboboxSelectionAccess().getGroup_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PageSelection__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPageSelectionAccess().getStoreActionAssignment_2_0()); }
		(rule__PageSelection__StoreActionAssignment_2_0)
		{ after(grammarAccess.getPageSelectionAccess().getStoreActionAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getPageSelectionAccess().getAssertionAssignment_2_1()); }
		(rule__PageSelection__AssertionAssignment_2_1)
		{ after(grammarAccess.getPageSelectionAccess().getAssertionAssignment_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralAction__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeneralActionAccess().getSetActionAssignment_0()); }
		(rule__GeneralAction__SetActionAssignment_0)
		{ after(grammarAccess.getGeneralActionAccess().getSetActionAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getGeneralActionAccess().getStoreActionAssignment_1()); }
		(rule__GeneralAction__StoreActionAssignment_1)
		{ after(grammarAccess.getGeneralActionAccess().getStoreActionAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getGeneralActionAccess().getSelectionAssignment_2()); }
		(rule__GeneralAction__SelectionAssignment_2)
		{ after(grammarAccess.getGeneralActionAccess().getSelectionAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSelection__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeSelectionAccess().getGroup_0()); }
		(rule__TypeSelection__Group_0__0)
		{ after(grammarAccess.getTypeSelectionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeSelectionAccess().getPARENTKeyword_1()); }
		'PARENT'
		{ after(grammarAccess.getTypeSelectionAccess().getPARENTKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypeSelectionAccess().getFIRSTKeyword_2()); }
		'FIRST'
		{ after(grammarAccess.getTypeSelectionAccess().getFIRSTKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getTypeSelectionAccess().getLASTKeyword_3()); }
		'LAST'
		{ after(grammarAccess.getTypeSelectionAccess().getLASTKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getTypeSelectionAccess().getALLKeyword_4()); }
		'ALL'
		{ after(grammarAccess.getTypeSelectionAccess().getALLKeyword_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assert__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssertAccess().getAssertContainAssignment_1_0()); }
		(rule__Assert__AssertContainAssignment_1_0)
		{ after(grammarAccess.getAssertAccess().getAssertContainAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getAssertAccess().getAssertEqualsAssignment_1_1()); }
		(rule__Assert__AssertEqualsAssignment_1_1)
		{ after(grammarAccess.getAssertAccess().getAssertEqualsAssignment_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssertContains__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssertContainsAccess().getGroup_1_0()); }
		(rule__AssertContains__Group_1_0__0)
		{ after(grammarAccess.getAssertContainsAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getAssertContainsAccess().getTEXTKeyword_1_1()); }
		'TEXT'
		{ after(grammarAccess.getAssertContainsAccess().getTEXTKeyword_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparable__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparableAccess().getGroup_0()); }
		(rule__Comparable__Group_0__0)
		{ after(grammarAccess.getComparableAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getComparableAccess().getGroup_1()); }
		(rule__Comparable__Group_1__0)
		{ after(grammarAccess.getComparableAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getComparableAccess().getSTRINGTerminalRuleCall_2()); }
		RULE_STRING
		{ after(grammarAccess.getComparableAccess().getSTRINGTerminalRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Browser__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBrowserAccess().getCHROMEEnumLiteralDeclaration_0()); }
		('chrome')
		{ after(grammarAccess.getBrowserAccess().getCHROMEEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getBrowserAccess().getFIREFOXEnumLiteralDeclaration_1()); }
		('firefox')
		{ after(grammarAccess.getBrowserAccess().getFIREFOXEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getBrowserAccess().getSAFARIEnumLiteralDeclaration_2()); }
		('safari')
		{ after(grammarAccess.getBrowserAccess().getSAFARIEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getBrowserAccess().getEDGEEnumLiteralDeclaration_3()); }
		('edge')
		{ after(grammarAccess.getBrowserAccess().getEDGEEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getBrowserAccess().getIEEnumLiteralDeclaration_4()); }
		('ie')
		{ after(grammarAccess.getBrowserAccess().getIEEnumLiteralDeclaration_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HtmlElement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHtmlElementAccess().getLINKEnumLiteralDeclaration_0()); }
		('LINK')
		{ after(grammarAccess.getHtmlElementAccess().getLINKEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getHtmlElementAccess().getBUTTONEnumLiteralDeclaration_1()); }
		('BUTTON')
		{ after(grammarAccess.getHtmlElementAccess().getBUTTONEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getHtmlElementAccess().getCHECKBOXEnumLiteralDeclaration_2()); }
		('CHECKBOX')
		{ after(grammarAccess.getHtmlElementAccess().getCHECKBOXEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getHtmlElementAccess().getCOMBOBOXEnumLiteralDeclaration_3()); }
		('COMBO_BOX')
		{ after(grammarAccess.getHtmlElementAccess().getCOMBOBOXEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getHtmlElementAccess().getDIVEnumLiteralDeclaration_4()); }
		('DIV')
		{ after(grammarAccess.getHtmlElementAccess().getDIVEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getHtmlElementAccess().getIMAGEEnumLiteralDeclaration_5()); }
		('IMAGE')
		{ after(grammarAccess.getHtmlElementAccess().getIMAGEEnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getHtmlElementAccess().getAEnumLiteralDeclaration_6()); }
		('A')
		{ after(grammarAccess.getHtmlElementAccess().getAEnumLiteralDeclaration_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getLABELEnumLiteralDeclaration_0()); }
		('LABEL')
		{ after(grammarAccess.getAttributeAccess().getLABELEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getAttributeAccess().getIDEnumLiteralDeclaration_1()); }
		('ID')
		{ after(grammarAccess.getAttributeAccess().getIDEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getAttributeAccess().getCLASSEnumLiteralDeclaration_2()); }
		('CLASS')
		{ after(grammarAccess.getAttributeAccess().getCLASSEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getAttributeAccess().getALTEnumLiteralDeclaration_3()); }
		('ALT')
		{ after(grammarAccess.getAttributeAccess().getALTEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getAttributeAccess().getVALUEEnumLiteralDeclaration_4()); }
		('VALUE')
		{ after(grammarAccess.getAttributeAccess().getVALUEEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getAttributeAccess().getHREFEnumLiteralDeclaration_5()); }
		('HREF')
		{ after(grammarAccess.getAttributeAccess().getHREFEnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getAttributeAccess().getTITLEEnumLiteralDeclaration_6()); }
		('TITLE')
		{ after(grammarAccess.getAttributeAccess().getTITLEEnumLiteralDeclaration_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Core__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Core__Group__0__Impl
	rule__Core__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Core__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoreAccess().getOpen_browserKeyword_0()); }
	'open_browser'
	{ after(grammarAccess.getCoreAccess().getOpen_browserKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Core__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Core__Group__1__Impl
	rule__Core__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Core__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoreAccess().getNameAssignment_1()); }
	(rule__Core__NameAssignment_1)
	{ after(grammarAccess.getCoreAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Core__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Core__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Core__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoreAccess().getActionsAssignment_2()); }
	(rule__Core__ActionsAssignment_2)*
	{ after(grammarAccess.getCoreAccess().getActionsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GoAction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GoAction__Group__0__Impl
	rule__GoAction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GoAction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGoActionAccess().getGoKeyword_0()); }
	'go'
	{ after(grammarAccess.getGoActionAccess().getGoKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GoAction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GoAction__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GoAction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGoActionAccess().getNameAssignment_1()); }
	(rule__GoAction__NameAssignment_1)
	{ after(grammarAccess.getGoActionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LinkButtonSelection__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinkButtonSelection__Group__0__Impl
	rule__LinkButtonSelection__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkButtonSelection__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkButtonSelectionAccess().getAlternatives_0()); }
	(rule__LinkButtonSelection__Alternatives_0)
	{ after(grammarAccess.getLinkButtonSelectionAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkButtonSelection__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinkButtonSelection__Group__1__Impl
	rule__LinkButtonSelection__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkButtonSelection__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkButtonSelectionAccess().getTypeSelectionAssignment_1()); }
	(rule__LinkButtonSelection__TypeSelectionAssignment_1)
	{ after(grammarAccess.getLinkButtonSelectionAccess().getTypeSelectionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkButtonSelection__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinkButtonSelection__Group__2__Impl
	rule__LinkButtonSelection__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkButtonSelection__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkButtonSelectionAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getLinkButtonSelectionAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkButtonSelection__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinkButtonSelection__Group__3__Impl
	rule__LinkButtonSelection__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkButtonSelection__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkButtonSelectionAccess().getAlternatives_3()); }
	(rule__LinkButtonSelection__Alternatives_3)*
	{ after(grammarAccess.getLinkButtonSelectionAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkButtonSelection__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinkButtonSelection__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkButtonSelection__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkButtonSelectionAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getLinkButtonSelectionAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GeneralSelection__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralSelection__Group__0__Impl
	rule__GeneralSelection__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralSelection__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralSelectionAccess().getAlternatives_0()); }
	(rule__GeneralSelection__Alternatives_0)
	{ after(grammarAccess.getGeneralSelectionAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralSelection__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralSelection__Group__1__Impl
	rule__GeneralSelection__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralSelection__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralSelectionAccess().getTypeSelectionAssignment_1()); }
	(rule__GeneralSelection__TypeSelectionAssignment_1)
	{ after(grammarAccess.getGeneralSelectionAccess().getTypeSelectionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralSelection__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralSelection__Group__2__Impl
	rule__GeneralSelection__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralSelection__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralSelectionAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getGeneralSelectionAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralSelection__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralSelection__Group__3__Impl
	rule__GeneralSelection__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralSelection__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralSelectionAccess().getGeneralActionsAssignment_3()); }
	(rule__GeneralSelection__GeneralActionsAssignment_3)*
	{ after(grammarAccess.getGeneralSelectionAccess().getGeneralActionsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralSelection__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralSelection__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralSelection__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralSelectionAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getGeneralSelectionAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CheckboxSelection__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CheckboxSelection__Group__0__Impl
	rule__CheckboxSelection__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckboxSelection__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheckboxSelectionAccess().getCHECKBOXKeyword_0()); }
	'CHECKBOX'
	{ after(grammarAccess.getCheckboxSelectionAccess().getCHECKBOXKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckboxSelection__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CheckboxSelection__Group__1__Impl
	rule__CheckboxSelection__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckboxSelection__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheckboxSelectionAccess().getTypeSelectionAssignment_1()); }
	(rule__CheckboxSelection__TypeSelectionAssignment_1)
	{ after(grammarAccess.getCheckboxSelectionAccess().getTypeSelectionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckboxSelection__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CheckboxSelection__Group__2__Impl
	rule__CheckboxSelection__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckboxSelection__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheckboxSelectionAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getCheckboxSelectionAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckboxSelection__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CheckboxSelection__Group__3__Impl
	rule__CheckboxSelection__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckboxSelection__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheckboxSelectionAccess().getAlternatives_3()); }
	(rule__CheckboxSelection__Alternatives_3)*
	{ after(grammarAccess.getCheckboxSelectionAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckboxSelection__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CheckboxSelection__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckboxSelection__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheckboxSelectionAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getCheckboxSelectionAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComboboxSelection__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComboboxSelection__Group__0__Impl
	rule__ComboboxSelection__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComboboxSelection__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComboboxSelectionAccess().getCOMBO_BOXKeyword_0()); }
	'COMBO_BOX'
	{ after(grammarAccess.getComboboxSelectionAccess().getCOMBO_BOXKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComboboxSelection__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComboboxSelection__Group__1__Impl
	rule__ComboboxSelection__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComboboxSelection__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComboboxSelectionAccess().getTypeSelectionAssignment_1()); }
	(rule__ComboboxSelection__TypeSelectionAssignment_1)
	{ after(grammarAccess.getComboboxSelectionAccess().getTypeSelectionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComboboxSelection__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComboboxSelection__Group__2__Impl
	rule__ComboboxSelection__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ComboboxSelection__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComboboxSelectionAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getComboboxSelectionAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComboboxSelection__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComboboxSelection__Group__3__Impl
	rule__ComboboxSelection__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ComboboxSelection__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComboboxSelectionAccess().getAlternatives_3()); }
	(rule__ComboboxSelection__Alternatives_3)*
	{ after(grammarAccess.getComboboxSelectionAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComboboxSelection__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComboboxSelection__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComboboxSelection__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComboboxSelectionAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getComboboxSelectionAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComboboxSelection__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComboboxSelection__Group_3_1__0__Impl
	rule__ComboboxSelection__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComboboxSelection__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComboboxSelectionAccess().getSelectKeyword_3_1_0()); }
	'select'
	{ after(grammarAccess.getComboboxSelectionAccess().getSelectKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComboboxSelection__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComboboxSelection__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComboboxSelection__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComboboxSelectionAccess().getSTRINGTerminalRuleCall_3_1_1()); }
	RULE_STRING
	{ after(grammarAccess.getComboboxSelectionAccess().getSTRINGTerminalRuleCall_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PageSelection__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PageSelection__Group__0__Impl
	rule__PageSelection__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PageSelection__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPageSelectionAccess().getPAGEKeyword_0()); }
	'PAGE'
	{ after(grammarAccess.getPageSelectionAccess().getPAGEKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PageSelection__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PageSelection__Group__1__Impl
	rule__PageSelection__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PageSelection__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPageSelectionAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getPageSelectionAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PageSelection__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PageSelection__Group__2__Impl
	rule__PageSelection__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PageSelection__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPageSelectionAccess().getAlternatives_2()); }
	(rule__PageSelection__Alternatives_2)*
	{ after(grammarAccess.getPageSelectionAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PageSelection__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PageSelection__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PageSelection__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPageSelectionAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getPageSelectionAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StoreAction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StoreAction__Group__0__Impl
	rule__StoreAction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StoreAction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStoreActionAccess().getStoreKeyword_0()); }
	'store'
	{ after(grammarAccess.getStoreActionAccess().getStoreKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StoreAction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StoreAction__Group__1__Impl
	rule__StoreAction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StoreAction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStoreActionAccess().getLeftParenthesisRightParenthesisKeyword_1()); }
	'()'
	{ after(grammarAccess.getStoreActionAccess().getLeftParenthesisRightParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StoreAction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StoreAction__Group__2__Impl
	rule__StoreAction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StoreAction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStoreActionAccess().getInKeyword_2()); }
	'in'
	{ after(grammarAccess.getStoreActionAccess().getInKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StoreAction__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StoreAction__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StoreAction__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStoreActionAccess().getVarAssignment_3()); }
	(rule__StoreAction__VarAssignment_3)
	{ after(grammarAccess.getStoreActionAccess().getVarAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SetAction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetAction__Group__0__Impl
	rule__SetAction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SetAction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetActionAccess().getSetKeyword_0()); }
	'set'
	{ after(grammarAccess.getSetActionAccess().getSetKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetAction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetAction__Group__1__Impl
	rule__SetAction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SetAction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetActionAccess().getAttributeAssignment_1()); }
	(rule__SetAction__AttributeAssignment_1)
	{ after(grammarAccess.getSetActionAccess().getAttributeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetAction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetAction__Group__2__Impl
	rule__SetAction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SetAction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetActionAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getSetActionAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetAction__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetAction__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SetAction__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetActionAccess().getValueAssignment_3()); }
	(rule__SetAction__ValueAssignment_3)
	{ after(grammarAccess.getSetActionAccess().getValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeSelection__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSelection__Group_0__0__Impl
	rule__TypeSelection__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSelection__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSelectionAccess().getAttributeAssignment_0_0()); }
	(rule__TypeSelection__AttributeAssignment_0_0)
	{ after(grammarAccess.getTypeSelectionAccess().getAttributeAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSelection__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSelection__Group_0__1__Impl
	rule__TypeSelection__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSelection__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSelectionAccess().getColonKeyword_0_1()); }
	':'
	{ after(grammarAccess.getTypeSelectionAccess().getColonKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSelection__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSelection__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSelection__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSelectionAccess().getValueAssignment_0_2()); }
	(rule__TypeSelection__ValueAssignment_0_2)
	{ after(grammarAccess.getTypeSelectionAccess().getValueAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Assert__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assert__Group__0__Impl
	rule__Assert__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assert__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssertAccess().getVerifyKeyword_0()); }
	'verify'
	{ after(grammarAccess.getAssertAccess().getVerifyKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assert__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assert__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assert__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssertAccess().getAlternatives_1()); }
	(rule__Assert__Alternatives_1)
	{ after(grammarAccess.getAssertAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AssertContains__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssertContains__Group__0__Impl
	rule__AssertContains__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssertContains__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssertContainsAccess().getContainsKeyword_0()); }
	'contains'
	{ after(grammarAccess.getAssertContainsAccess().getContainsKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssertContains__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssertContains__Group__1__Impl
	rule__AssertContains__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AssertContains__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssertContainsAccess().getAlternatives_1()); }
	(rule__AssertContains__Alternatives_1)
	{ after(grammarAccess.getAssertContainsAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssertContains__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssertContains__Group__2__Impl
	rule__AssertContains__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AssertContains__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssertContainsAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getAssertContainsAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssertContains__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssertContains__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssertContains__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssertContainsAccess().getSTRINGTerminalRuleCall_3()); }
	RULE_STRING
	{ after(grammarAccess.getAssertContainsAccess().getSTRINGTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AssertContains__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssertContains__Group_1_0__0__Impl
	rule__AssertContains__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssertContains__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssertContainsAccess().getHtmlElementAssignment_1_0_0()); }
	(rule__AssertContains__HtmlElementAssignment_1_0_0)
	{ after(grammarAccess.getAssertContainsAccess().getHtmlElementAssignment_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssertContains__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssertContains__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssertContains__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssertContainsAccess().getAttributeAssignment_1_0_1()); }
	(rule__AssertContains__AttributeAssignment_1_0_1)
	{ after(grammarAccess.getAssertContainsAccess().getAttributeAssignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AssertEquals__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssertEquals__Group__0__Impl
	rule__AssertEquals__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssertEquals__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssertEqualsAccess().getC1Assignment_0()); }
	(rule__AssertEquals__C1Assignment_0)
	{ after(grammarAccess.getAssertEqualsAccess().getC1Assignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssertEquals__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssertEquals__Group__1__Impl
	rule__AssertEquals__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AssertEquals__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssertEqualsAccess().getEqualsKeyword_1()); }
	'equals'
	{ after(grammarAccess.getAssertEqualsAccess().getEqualsKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssertEquals__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssertEquals__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssertEquals__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssertEqualsAccess().getC2Assignment_2()); }
	(rule__AssertEquals__C2Assignment_2)
	{ after(grammarAccess.getAssertEqualsAccess().getC2Assignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Comparable__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparable__Group_0__0__Impl
	rule__Comparable__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparable__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparableAccess().getVARKeyword_0_0()); }
	'VAR:'
	{ after(grammarAccess.getComparableAccess().getVARKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparable__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparable__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparable__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparableAccess().getSTRINGTerminalRuleCall_0_1()); }
	RULE_STRING
	{ after(grammarAccess.getComparableAccess().getSTRINGTerminalRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Comparable__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparable__Group_1__0__Impl
	rule__Comparable__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparable__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparableAccess().getLeftParenthesisKeyword_1_0()); }
	'('
	{ after(grammarAccess.getComparableAccess().getLeftParenthesisKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparable__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparable__Group_1__1__Impl
	rule__Comparable__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparable__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparableAccess().getHtmlElementAssignment_1_1()); }
	(rule__Comparable__HtmlElementAssignment_1_1)
	{ after(grammarAccess.getComparableAccess().getHtmlElementAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparable__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparable__Group_1__2__Impl
	rule__Comparable__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparable__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparableAccess().getAttributeAssignment_1_2()); }
	(rule__Comparable__AttributeAssignment_1_2)
	{ after(grammarAccess.getComparableAccess().getAttributeAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparable__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparable__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparable__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparableAccess().getRightParenthesisKeyword_1_3()); }
	')'
	{ after(grammarAccess.getComparableAccess().getRightParenthesisKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Program__CoreAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getCoreCoreParserRuleCall_0()); }
		ruleCore
		{ after(grammarAccess.getProgramAccess().getCoreCoreParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Core__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCoreAccess().getNameBrowserEnumRuleCall_1_0()); }
		ruleBrowser
		{ after(grammarAccess.getCoreAccess().getNameBrowserEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Core__ActionsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCoreAccess().getActionsActionParserRuleCall_2_0()); }
		ruleAction
		{ after(grammarAccess.getCoreAccess().getActionsActionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__GoActionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getGoActionGoActionParserRuleCall_0_0()); }
		ruleGoAction
		{ after(grammarAccess.getActionAccess().getGoActionGoActionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__SelectionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getSelectionSelectionParserRuleCall_1_0()); }
		ruleSelection
		{ after(grammarAccess.getActionAccess().getSelectionSelectionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GoAction__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGoActionAccess().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getGoActionAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection__LinkButtonSelectionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectionAccess().getLinkButtonSelectionLinkButtonSelectionParserRuleCall_0_0()); }
		ruleLinkButtonSelection
		{ after(grammarAccess.getSelectionAccess().getLinkButtonSelectionLinkButtonSelectionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection__GeneralSelectionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectionAccess().getGeneralSelectionGeneralSelectionParserRuleCall_1_0()); }
		ruleGeneralSelection
		{ after(grammarAccess.getSelectionAccess().getGeneralSelectionGeneralSelectionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection__CheckboxSelectionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectionAccess().getCheckboxSelectionCheckboxSelectionParserRuleCall_2_0()); }
		ruleCheckboxSelection
		{ after(grammarAccess.getSelectionAccess().getCheckboxSelectionCheckboxSelectionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection__ComboboxSelectionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectionAccess().getComboboxSelectionComboboxSelectionParserRuleCall_3_0()); }
		ruleComboboxSelection
		{ after(grammarAccess.getSelectionAccess().getComboboxSelectionComboboxSelectionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection__PageSelectionAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectionAccess().getPageSelectionPageSelectionParserRuleCall_4_0()); }
		rulePageSelection
		{ after(grammarAccess.getSelectionAccess().getPageSelectionPageSelectionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkButtonSelection__TypeSelectionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinkButtonSelectionAccess().getTypeSelectionTypeSelectionParserRuleCall_1_0()); }
		ruleTypeSelection
		{ after(grammarAccess.getLinkButtonSelectionAccess().getTypeSelectionTypeSelectionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkButtonSelection__GeneralActionsAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinkButtonSelectionAccess().getGeneralActionsGeneralActionParserRuleCall_3_0_0()); }
		ruleGeneralAction
		{ after(grammarAccess.getLinkButtonSelectionAccess().getGeneralActionsGeneralActionParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralSelection__TypeSelectionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeneralSelectionAccess().getTypeSelectionTypeSelectionParserRuleCall_1_0()); }
		ruleTypeSelection
		{ after(grammarAccess.getGeneralSelectionAccess().getTypeSelectionTypeSelectionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralSelection__GeneralActionsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeneralSelectionAccess().getGeneralActionsGeneralActionParserRuleCall_3_0()); }
		ruleGeneralAction
		{ after(grammarAccess.getGeneralSelectionAccess().getGeneralActionsGeneralActionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckboxSelection__TypeSelectionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCheckboxSelectionAccess().getTypeSelectionTypeSelectionParserRuleCall_1_0()); }
		ruleTypeSelection
		{ after(grammarAccess.getCheckboxSelectionAccess().getTypeSelectionTypeSelectionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckboxSelection__GeneralActionsAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCheckboxSelectionAccess().getGeneralActionsGeneralActionParserRuleCall_3_0_0()); }
		ruleGeneralAction
		{ after(grammarAccess.getCheckboxSelectionAccess().getGeneralActionsGeneralActionParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComboboxSelection__TypeSelectionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComboboxSelectionAccess().getTypeSelectionTypeSelectionParserRuleCall_1_0()); }
		ruleTypeSelection
		{ after(grammarAccess.getComboboxSelectionAccess().getTypeSelectionTypeSelectionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComboboxSelection__GeneralActionsAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComboboxSelectionAccess().getGeneralActionsGeneralActionParserRuleCall_3_0_0()); }
		ruleGeneralAction
		{ after(grammarAccess.getComboboxSelectionAccess().getGeneralActionsGeneralActionParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PageSelection__StoreActionAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPageSelectionAccess().getStoreActionStoreActionParserRuleCall_2_0_0()); }
		ruleStoreAction
		{ after(grammarAccess.getPageSelectionAccess().getStoreActionStoreActionParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PageSelection__AssertionAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPageSelectionAccess().getAssertionAssertParserRuleCall_2_1_0()); }
		ruleAssert
		{ after(grammarAccess.getPageSelectionAccess().getAssertionAssertParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralAction__SetActionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeneralActionAccess().getSetActionSetActionParserRuleCall_0_0()); }
		ruleSetAction
		{ after(grammarAccess.getGeneralActionAccess().getSetActionSetActionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralAction__StoreActionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeneralActionAccess().getStoreActionStoreActionParserRuleCall_1_0()); }
		ruleStoreAction
		{ after(grammarAccess.getGeneralActionAccess().getStoreActionStoreActionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralAction__SelectionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeneralActionAccess().getSelectionSelectionParserRuleCall_2_0()); }
		ruleSelection
		{ after(grammarAccess.getGeneralActionAccess().getSelectionSelectionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StoreAction__VarAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStoreActionAccess().getVarVarParserRuleCall_3_0()); }
		ruleVar
		{ after(grammarAccess.getStoreActionAccess().getVarVarParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarAccess().getNameSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getVarAccess().getNameSTRINGTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetAction__AttributeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetActionAccess().getAttributeAttributeEnumRuleCall_1_0()); }
		ruleAttribute
		{ after(grammarAccess.getSetActionAccess().getAttributeAttributeEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetAction__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetActionAccess().getValueSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getSetActionAccess().getValueSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSelection__AttributeAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeSelectionAccess().getAttributeAttributeEnumRuleCall_0_0_0()); }
		ruleAttribute
		{ after(grammarAccess.getTypeSelectionAccess().getAttributeAttributeEnumRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSelection__ValueAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeSelectionAccess().getValueSTRINGTerminalRuleCall_0_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getTypeSelectionAccess().getValueSTRINGTerminalRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assert__AssertContainAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssertAccess().getAssertContainAssertContainsParserRuleCall_1_0_0()); }
		ruleAssertContains
		{ after(grammarAccess.getAssertAccess().getAssertContainAssertContainsParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assert__AssertEqualsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssertAccess().getAssertEqualsAssertEqualsParserRuleCall_1_1_0()); }
		ruleAssertEquals
		{ after(grammarAccess.getAssertAccess().getAssertEqualsAssertEqualsParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssertContains__HtmlElementAssignment_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssertContainsAccess().getHtmlElementHtmlElementEnumRuleCall_1_0_0_0()); }
		ruleHtmlElement
		{ after(grammarAccess.getAssertContainsAccess().getHtmlElementHtmlElementEnumRuleCall_1_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssertContains__AttributeAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssertContainsAccess().getAttributeAttributeEnumRuleCall_1_0_1_0()); }
		ruleAttribute
		{ after(grammarAccess.getAssertContainsAccess().getAttributeAttributeEnumRuleCall_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssertEquals__C1Assignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssertEqualsAccess().getC1ComparableParserRuleCall_0_0()); }
		ruleComparable
		{ after(grammarAccess.getAssertEqualsAccess().getC1ComparableParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssertEquals__C2Assignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssertEqualsAccess().getC2ComparableParserRuleCall_2_0()); }
		ruleComparable
		{ after(grammarAccess.getAssertEqualsAccess().getC2ComparableParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparable__HtmlElementAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparableAccess().getHtmlElementHtmlElementEnumRuleCall_1_1_0()); }
		ruleHtmlElement
		{ after(grammarAccess.getComparableAccess().getHtmlElementHtmlElementEnumRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparable__AttributeAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparableAccess().getAttributeAttributeEnumRuleCall_1_2_0()); }
		ruleAttribute
		{ after(grammarAccess.getComparableAccess().getAttributeAttributeEnumRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
